"use strict";(self.webpackChunkai_unlimited_docs=self.webpackChunkai_unlimited_docs||[]).push([[1860],{50186:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>u});var i=t(74848),a=t(28453);t(56240),t(19365);const r={id:"in-db-functions",title:"In-database functions",description:"Learn about the analytic functions you can use in the AI Unlimited Fabric Workload.",sidebar_label:"In-database functions reference",sidebar_position:6,pagination_prev:null,pagination_next:null,displayed_sidebar:"fabricSidebar"},s="In-database functions reference",o={id:"fabric/in-db-functions",title:"In-database functions",description:"Learn about the analytic functions you can use in the AI Unlimited Fabric Workload.",source:"@site/docs/fabric/in-db-functions.md",sourceDirName:"fabric",slug:"/fabric/in-db-functions",permalink:"/pr-preview/pr-157/ai-unlimited/fabric/in-db-functions",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{id:"in-db-functions",title:"In-database functions",description:"Learn about the analytic functions you can use in the AI Unlimited Fabric Workload.",sidebar_label:"In-database functions reference",sidebar_position:6,pagination_prev:null,pagination_next:null,displayed_sidebar:"fabricSidebar"},sidebar:"fabricSidebar"},l={},u=[{value:"Data cleaning functions",id:"data-cleaning-functions",level:2},{value:"Data exploration functions",id:"data-exploration-functions",level:2},{value:"Feature engineering transform functions",id:"feature-engineering-transform-functions",level:2},{value:"Feature engineering utility functions",id:"feature-engineering-utility-functions",level:2},{value:"Model scoring functions",id:"model-scoring-functions",level:2},{value:"Model evaluation functions",id:"model-evaluation-functions",level:2},{value:"Text analytic functions",id:"text-analytic-functions",level:2},{value:"Hypothesis testing functions",id:"hypothesis-testing-functions",level:2},{value:"Path and pattern analysis functions",id:"path-and-pattern-analysis-functions",level:2}];function c(e){const n={admonition:"admonition",h1:"h1",h2:"h2",p:"p",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"in-database-functions-reference",children:"In-database functions reference"}),"\n",(0,i.jsx)(n.p,{children:"To further explore the AI Unlimited Workload, feel free to go through the rest of the data prep notebook or try one of the other sample notebooks.  You can also create a new notebook item and select \u201cCreate a new\u201d to do any of your own analysis and try our in-database functions."}),"\n",(0,i.jsx)(n.p,{children:"Follow the link in the function name to find usage notes."}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"Usage instructions often reference \u201cCREATE TABLE.\u201d To write to OneLake, you must use \u201cCREATE OTF TABLE.\u201d"})}),"\n",(0,i.jsx)(n.h2,{id:"data-cleaning-functions",children:"Data cleaning functions"}),"\n",(0,i.jsxs)(n.p,{children:["TD_GetFutileColumns",(0,i.jsx)("br",{}),"\nReturns the futile column names."]}),"\n",(0,i.jsxs)(n.p,{children:["TD_OutlierFilterFit",(0,i.jsx)("br",{}),"\nCalculates the lower_percentile, upper_percentile, count of rows, and median for the specified input table columns."]}),"\n",(0,i.jsxs)(n.p,{children:["TD_OutlierFilterTransform",(0,i.jsx)("br",{}),"\nFilters outliers from the input table."]}),"\n",(0,i.jsxs)(n.p,{children:["TD_GetRowsWithoutMissingValues",(0,i.jsx)("br",{}),"\nDisplays the rows that have non-NULL values in the specified input table columns."]}),"\n",(0,i.jsxs)(n.p,{children:["TD_SimpleImputeFit",(0,i.jsx)("br",{}),"\nOutputs a table of values to substitute for missing values in the input table."]}),"\n",(0,i.jsxs)(n.p,{children:["TD_SimpleImputeTransform",(0,i.jsx)("br",{}),"\nSubstitutes specified values for missing values in the input table."]}),"\n",(0,i.jsxs)(n.p,{children:["TD_ConvertTo",(0,i.jsx)("br",{}),"\nConverts the specified input table columns to specified data types."]}),"\n",(0,i.jsxs)(n.p,{children:["Pack",(0,i.jsx)("br",{}),"\nCompresses data in multiple columns into a single packed data column."]}),"\n",(0,i.jsxs)(n.p,{children:["Unpack",(0,i.jsx)("br",{}),"\nExpands data from a single packed column to multiple unpacked columns."]}),"\n",(0,i.jsxs)(n.p,{children:["StringSimilarity",(0,i.jsx)("br",{}),"\nCalculates the similarity between two strings, using the specified comparison method."]}),"\n",(0,i.jsx)(n.h2,{id:"data-exploration-functions",children:"Data exploration functions"}),"\n",(0,i.jsx)(n.p,{children:"MovingAverage\nComputes average values in a series."}),"\n",(0,i.jsx)(n.p,{children:"TD_CategoricalSummary\nDisplays the distinct values and their counts for each specified input table column."}),"\n",(0,i.jsx)(n.p,{children:"TD_ColumnSummary\nDisplays a summary of each specified input table column."}),"\n",(0,i.jsx)(n.p,{children:"TD_GetRowsWithMissingValues\nDisplays the rows that have NULL values in the specified input table columns."}),"\n",(0,i.jsx)(n.p,{children:"TD_Histogram\nCalculates the frequency distribution of a data set."}),"\n",(0,i.jsx)(n.p,{children:"TD_QQNorm\nChecks whether the values in the specified input table columns are normally distributed."}),"\n",(0,i.jsx)(n.p,{children:"TD_UnivariateStatistics\nDisplays descriptive statistics for each specified numeric input table column."}),"\n",(0,i.jsx)(n.p,{children:"TD_WhichMax\nDisplays all rows that have the maximum value in a specified input table column."}),"\n",(0,i.jsx)(n.p,{children:"TD_WhichMin\nDisplays all rows that have the minimum value in specified input table column."}),"\n",(0,i.jsx)(n.h2,{id:"feature-engineering-transform-functions",children:"Feature engineering transform functions"}),"\n",(0,i.jsx)(n.p,{children:"Antiselect\nAntiSelect returns all columns except those specified."}),"\n",(0,i.jsx)(n.p,{children:"TD_BinCodeFit\nConverts numeric data to categorical data by binning the numeric data into multiple\nnumeric bins (intervals)."}),"\n",(0,i.jsx)(n.p,{children:"TD_BinCodeTransform\nTransforms input table columns from the BinCodeFit function output."}),"\n",(0,i.jsx)(n.p,{children:"TD_ColumnTransformer\nTransforms the input table columns in a single operation."}),"\n",(0,i.jsx)(n.p,{children:"TD_FunctionFit\nDetermines whether specified numeric transformations can be applied to specified input\ncolumns."}),"\n",(0,i.jsx)(n.p,{children:"TD_FunctionTransform\nApplies numeric transformations to input columns."}),"\n",(0,i.jsx)(n.p,{children:"TD_NonLinearCombineFit\nReturns the target columns and a specified formula which uses the non-linear combination of existing features."}),"\n",(0,i.jsx)(n.p,{children:"TD_NonLinearCombineTransform\nGenerates the values of the new feature using the specified formula from the TD_NonLinearCombineFit function output."}),"\n",(0,i.jsx)(n.p,{children:"TD_OneHotEncodingFit\nOutputs a table of attributes and categorical values to the TD_OneHotEncodingTransform function."}),"\n",(0,i.jsx)(n.p,{children:"TD_OneHotEncodingTransform\nEncodes specified attributes and categorical values as one-hot numeric vectors using the output from the TD_OneHotEncodingFit function."}),"\n",(0,i.jsx)(n.p,{children:"TD_OrdinalEncodingFit\nEncodes specified attributes and categorical values as one-hot numeric vectors using the output from the TD_OneHotEncodingFit function."}),"\n",(0,i.jsx)(n.p,{children:"TD_OrdinalEncodingTransform\nMaps the categorical value to a specified ordinal value using the TD_OrdinalEncodingFit output."}),"\n",(0,i.jsx)(n.p,{children:"TD_Pivoting\nPivots the data, that is, changes the data from sparse to dense format."}),"\n",(0,i.jsx)(n.p,{children:"TD_PolynomialFeaturesFit\nStores all the specified values in the argument in a tabular format."}),"\n",(0,i.jsx)(n.p,{children:"TD_PolynomialFeaturesTransform\nExtracts values of arguments from the output of the TD_PolynomialFeaturesFit function and generates a feature matrix of all polynomial combinations of the features."}),"\n",(0,i.jsx)(n.p,{children:"TD_RandomProjectionFit\nReturns a random projection matrix based on the specified arguments."}),"\n",(0,i.jsx)(n.p,{children:"TD_RandomProjectionMinComponents\nCalculates the minimum number of components required for applying RandomProjection on the given dataset for the specified epsilon(distortion) parameter value."}),"\n",(0,i.jsx)(n.p,{children:"TD_RandomProjectionTransform\nConverts the high-dimensional input data to a lower-dimensional space using the TD_RandomProjectionFit function output."}),"\n",(0,i.jsx)(n.p,{children:"TD_RowNormalizeFit\nOutputs a table of parameters and specified input columns to TD_RowNormalizeTransform which normalizes the input columns row-wise."}),"\n",(0,i.jsx)(n.p,{children:"TD_RowNormalizeTransform\nNormalizes the input columns row-wise using the output of the TD_RowNormalizeFit function."}),"\n",(0,i.jsx)(n.p,{children:"TD_ScaleFit\nOutputs a table of statistics to the TD_ScaleTransform function."}),"\n",(0,i.jsx)(n.p,{children:"TD_ScaleTransform\nScales the specified input table columns using the output of the TD_ScaleFit function."}),"\n",(0,i.jsx)(n.p,{children:"TD_SMOTE\nImplements SMOTE and three variations (ADASYN, Borderline, and SMOTE-NC) to sample from datasets, border groups, or mixed datasets."}),"\n",(0,i.jsx)(n.p,{children:"TD_TargetEncodingFit\nTakes the InputTable and a CategoricalTable as input and generates the required hyperparameters to be used by the TD_TargetEncodingTransform function for encoding the categorical values."}),"\n",(0,i.jsx)(n.p,{children:"TD_TargetEncodingTransform\nTakes the InputTable and a FitTable generated by TD_TargetEncodingFit for encoding the categorical values."}),"\n",(0,i.jsx)(n.p,{children:"TD_Unpivoting\nUnpivots the data, that is, changes the data from dense format to sparse format."}),"\n",(0,i.jsx)(n.h2,{id:"feature-engineering-utility-functions",children:"Feature engineering utility functions"}),"\n",(0,i.jsx)(n.p,{children:"TD_FillRowID\nAdds a column of unique row identifiers to the input table."}),"\n",(0,i.jsx)(n.p,{children:"TD_NumApply\nApplies a specified numeric operator to the specified input table columns."}),"\n",(0,i.jsx)(n.p,{children:"TD_RoundColumns\nRounds the values of each specified input table column to a specified number of decimal places."}),"\n",(0,i.jsx)(n.p,{children:"TD_StrApply\nApplies a specified string operator to the specified input table columns."}),"\n",(0,i.jsx)(n.h2,{id:"model-scoring-functions",children:"Model scoring functions"}),"\n",(0,i.jsx)(n.p,{children:"TD_DecisionForestPredict\nUses the model output by TD_DecisionForest function to analyze the input data and make\npredictions."}),"\n",(0,i.jsx)(n.p,{children:"TD_GLMPredict\nPredicts target values (regression) and class labels (classification) for test data using a GLM model of the TD_GLM function."}),"\n",(0,i.jsx)(n.p,{children:"TD_KMeansPredict\nUses the cluster centroids in the TD_KMeans function output to assign the input data points to the cluster centroids."}),"\n",(0,i.jsx)(n.p,{children:"TD_NaiveBayesPredict\nUses the model generated by TD_NaiveBayes function to predict the outcomes for a test set of data."}),"\n",(0,i.jsx)(n.p,{children:"TD_OneClassSVMPredict\nPredicts target class labels (classification) for test data using a one-class SVM model trained by TD_OneClassSVM."}),"\n",(0,i.jsx)(n.p,{children:"TD_SVMPredict\nPredicts target values (regression) and class labels (classification) for test data using an SVM model trained by TD_SVM."}),"\n",(0,i.jsx)(n.p,{children:"TD_XGBoostPredict\nRuns the predictive algorithm based on the model generated by TD_XGBoost."}),"\n",(0,i.jsx)(n.h2,{id:"model-evaluation-functions",children:"Model evaluation functions"}),"\n",(0,i.jsx)(n.p,{children:"TD_SHAP\nComputes the contribution of each feature in a prediction as as average marginal contribution of the feature value across all possible coalitions."}),"\n",(0,i.jsx)(n.p,{children:"TD_Silhouette\nDetermines how well the data is clustered among clusters."}),"\n",(0,i.jsx)(n.p,{children:"TD_ClassificationEvaluator\nComputes the Confusion matrix, precision, recall, and F1-score based on the observed labels (true labels) and the predicted labels."}),"\n",(0,i.jsx)(n.p,{children:"TD_RegressionEvaluator\nComputes metrics to evaluate and compare multiple models and summarizes how close predictions are to their expected values."}),"\n",(0,i.jsx)(n.p,{children:"TD_ROC\nAccepts a set of prediction-actual pairs for a binary classification model and calculates the True-positive rate (TPR), False-positive rate (FPR), The area under the ROC curve (AUC), and Gini coefficient values for a range of discrimination thresholds."}),"\n",(0,i.jsx)(n.p,{children:"TD_TrainTestSplit\nSimulates model performance on new data."}),"\n",(0,i.jsx)(n.h2,{id:"text-analytic-functions",children:"Text analytic functions"}),"\n",(0,i.jsx)(n.p,{children:"TD_Ngramsplitter\nTokenizes (splits) an input stream and emits n multigrams, based on specified delimiter and reset parameters. Useful for sentiment analysis, topic identification, and document classification."}),"\n",(0,i.jsx)(n.p,{children:"TD_NaiveBayesTextClassifierPredict\nUses the model output by TD_NaiveBayesTextClassifierTrainer function to analyze the input data and make predictions."}),"\n",(0,i.jsx)(n.p,{children:"TD_NaiveBayesTextClassifierTrainer\nCalculates the conditional probabilities for token-category pairs, the prior probabilities, and the missing token probabilities for all categories."}),"\n",(0,i.jsx)(n.p,{children:"TD_SentimentExtractor\nUses a dictionary model to extract the sentiment (positive, negative, or neutral) of each input document or sentence."}),"\n",(0,i.jsx)(n.p,{children:"TD_TextParser\nTokenizes an input stream of words and creates a row for each word in the output table."}),"\n",(0,i.jsx)(n.p,{children:"TD_TFIDF\nTakes any document set and outputs the Term Frequency, Inverse Document Frequency, and Term Frequency - Inverse Document Frequency scores for each term."}),"\n",(0,i.jsx)(n.p,{children:"TD_WordEmbeddings\nUses training and prediction to determine the similarity between words and phrases."}),"\n",(0,i.jsx)(n.h2,{id:"hypothesis-testing-functions",children:"Hypothesis testing functions"}),"\n",(0,i.jsx)(n.p,{children:"TD_ANOVA\nPerforms analysis of variance (ANOVA) test to analyze the difference between the means."}),"\n",(0,i.jsx)(n.p,{children:"TD_ChiSq\nPerforms Pearson's chi-squared test for independence."}),"\n",(0,i.jsx)(n.p,{children:"TD_FTest\nPerforms an F-test, for which the test statistic has an F-distribution under the null\nhypothesis."}),"\n",(0,i.jsx)(n.p,{children:"TD_ZTest\nPerforms a Z-test, for which the distribution of the test statistic under the null hypothesis can be approximated by normal distribution."}),"\n",(0,i.jsx)(n.h2,{id:"path-and-pattern-analysis-functions",children:"Path and pattern analysis functions"}),"\n",(0,i.jsx)(n.p,{children:"Attribution\nCalculates attributions with a wide range of distribution models. Often used in web-page analysis."}),"\n",(0,i.jsx)(n.p,{children:"nPath\nPerforms regular pattern matching over a sequence of rows from one or more inputs."}),"\n",(0,i.jsx)(n.p,{children:"nPath\nMaps each click in a clickstream to a unique session identifier."})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},19365:(e,n,t)=>{t.d(n,{A:()=>s});t(96540);var i=t(34164);const a={tabItem:"tabItem_Ymn6"};var r=t(74848);function s(e){var n=e.children,t=e.hidden,s=e.className;return(0,r.jsx)("div",{role:"tabpanel",className:(0,i.A)(a.tabItem,s),hidden:t,children:n})}},56240:(e,n,t)=>{t.d(n,{A:()=>j});var i=t(96540),a=t(34164),r=t(23104),s=t(56347),o=t(205),l=t(57485);var u=t(89466);function c(e){var n,t;return null!=(n=null==(t=i.Children.toArray(e).filter((function(e){return"\n"!==e})).map((function(e){if(!e||(0,i.isValidElement)(e)&&((n=e.props)&&"object"==typeof n&&"value"in n))return e;var n;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:t.filter(Boolean))?n:[]}function d(e){var n=e.values,t=e.children;return(0,i.useMemo)((function(){var e=null!=n?n:function(e){return c(e).map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes,default:n.default}}))}(t);return function(e){var n,t,i=(void 0===(t=function(e,n){return e.value===n.value})&&(t=function(e,n){return e===n}),(n=e).filter((function(e,i){return n.findIndex((function(n){return t(n,e)}))!==i})));if(i.length>0)throw new Error('Docusaurus error: Duplicate values "'+i.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[n,t])}function p(e){var n=e.value;return e.tabValues.some((function(e){return e.value===n}))}function h(e){var n=e.queryString,t=void 0!==n&&n,a=e.groupId,r=(0,s.W6)(),o=function(e){var n=e.queryString,t=void 0!==n&&n,i=e.groupId;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!i)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=i?i:null}({queryString:t,groupId:a});return[(0,l.aZ)(o),(0,i.useCallback)((function(e){if(o){var n=new URLSearchParams(r.location.search);n.set(o,e),r.replace(Object.assign({},r.location,{search:n.toString()}))}}),[o,r])]}function f(e){var n,t,a,r,s=e.defaultValue,l=e.queryString,c=void 0!==l&&l,f=e.groupId,m=d(e),b=(0,i.useState)((function(){return function(e){var n,t=e.defaultValue,i=e.tabValues;if(0===i.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:i}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+t+'" but none of its children has the corresponding value. Available values are: '+i.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return t}var a=null!=(n=i.find((function(e){return e.default})))?n:i[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:s,tabValues:m})})),v=b[0],g=b[1],T=h({queryString:c,groupId:f}),x=T[0],j=T[1],D=(n=function(e){return e?"docusaurus.tab."+e:null}({groupId:f}.groupId),t=(0,u.Dv)(n),a=t[0],r=t[1],[a,(0,i.useCallback)((function(e){n&&r.set(e)}),[n,r])]),_=D[0],y=D[1],w=function(){var e=null!=x?x:_;return p({value:e,tabValues:m})?e:null}();return(0,o.A)((function(){w&&g(w)}),[w]),{selectedValue:v,selectValue:(0,i.useCallback)((function(e){if(!p({value:e,tabValues:m}))throw new Error("Can't select invalid tab value="+e);g(e),j(e),y(e)}),[j,y,m]),tabValues:m}}var m=t(92303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=t(74848);function g(e){var n=e.className,t=e.block,i=e.selectedValue,s=e.selectValue,o=e.tabValues,l=[],u=(0,r.a_)().blockElementScrollPositionUntilNextRender,c=function(e){var n=e.currentTarget,t=l.indexOf(n),a=o[t].value;a!==i&&(u(n),s(a))},d=function(e){var n,t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":var i,a=l.indexOf(e.currentTarget)+1;t=null!=(i=l[a])?i:l[0];break;case"ArrowLeft":var r,s=l.indexOf(e.currentTarget)-1;t=null!=(r=l[s])?r:l[l.length-1]}null==(n=t)||n.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":t},n),children:o.map((function(e){var n=e.value,t=e.label,r=e.attributes;return(0,v.jsx)("li",Object.assign({role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:function(e){return l.push(e)},onKeyDown:d,onClick:c},r,{className:(0,a.A)("tabs__item",b.tabItem,null==r?void 0:r.className,{"tabs__item--active":i===n}),children:null!=t?t:n}),n)}))})}function T(e){var n=e.lazy,t=e.children,a=e.selectedValue,r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){var s=r.find((function(e){return e.props.value===a}));return s?(0,i.cloneElement)(s,{className:"margin-top--md"}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:r.map((function(e,n){return(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==a})}))})}function x(e){var n=f(e);return(0,v.jsxs)("div",{className:(0,a.A)("tabs-container",b.tabList),children:[(0,v.jsx)(g,Object.assign({},e,n)),(0,v.jsx)(T,Object.assign({},e,n))]})}function j(e){var n=(0,m.A)();return(0,v.jsx)(x,Object.assign({},e,{children:c(e.children)}),String(n))}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var i=t(96540);const a={},r=i.createContext(a);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);