"use strict";(self.webpackChunkai_unlimited_docs=self.webpackChunkai_unlimited_docs||[]).push([[7823],{41269:(e,n,a)=>{a.d(n,{Ay:()=>r,RM:()=>i});var t=a(74848),s=a(28453);const i=[];function o(e){const n={a:"a",admonition:"admonition",p:"p",...(0,s.R)(),...e.components};return(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["If you have any questions or need further assistance, please visit our ",(0,t.jsx)(n.a,{href:"https://support.teradata.com/community",children:"community forum"})," where you can get support and interact with other community members."]})})}function r(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},62680:(e,n,a)=>{a.d(n,{Ay:()=>r,RM:()=>i});var t=a(74848),s=a(28453);const i=[];function o(e){const n={a:"a",admonition:"admonition",p:"p",...(0,s.R)(),...e.components};return(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["If you need a test instance of Vantage, you can provision one for free at ",(0,t.jsx)(n.a,{href:"https://clearscape.teradata.com/sign-in?utm_source=dev_portal&utm_medium=quickstart_tutorial&utm_campaign=quickstarts",children:"https://clearscape.teradata.com"})]})})}function r(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},59049:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>A,frontMatter:()=>r,metadata:()=>c,toc:()=>p});var t=a(74848),s=a(28453),i=a(62680),o=a(41269);const r={sidebar_position:14,author:"Wenjie Tehan",email:"wenjie.tehan@teradata.com",page_last_update:"February 14th, 2022",description:"Connect Teradata Vantage to Salesforce using Amazon Appflow.",keywords:["data warehouses","compute storage separation","teradata","vantage","cloud data platform","object storage","business intelligence","enterprise analytics","salesforce integration."]},l="Connect Teradata Vantage to Salesforce using Amazon Appflow",c={id:"manage-data/integrate-teradata-vantage-to-salesforce-using-amazon-appflow",title:"Connect Teradata Vantage to Salesforce using Amazon Appflow",description:"Connect Teradata Vantage to Salesforce using Amazon Appflow.",source:"@site/quickstarts/manage-data/integrate-teradata-vantage-to-salesforce-using-amazon-appflow.md",sourceDirName:"manage-data",slug:"/manage-data/integrate-teradata-vantage-to-salesforce-using-amazon-appflow",permalink:"/pr-preview/pr-150/ko/quickstarts/manage-data/integrate-teradata-vantage-to-salesforce-using-amazon-appflow",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:14,frontMatter:{sidebar_position:14,author:"Wenjie Tehan",email:"wenjie.tehan@teradata.com",page_last_update:"February 14th, 2022",description:"Connect Teradata Vantage to Salesforce using Amazon Appflow.",keywords:["data warehouses","compute storage separation","teradata","vantage","cloud data platform","object storage","business intelligence","enterprise analytics","salesforce integration."]},sidebar:"tutorialSidebar",previous:{title:"Execute Airflow workflows that use dbt with Teradata Vantage",permalink:"/pr-preview/pr-150/ko/quickstarts/manage-data/execute-airflow-workflows-that-use-dbt-with-teradata-vantage"},next:{title:"Store events from Twilio Segment",permalink:"/pr-preview/pr-150/ko/quickstarts/manage-data/segment"}},d={},p=[{value:"Overview",id:"overview",level:3},{value:"About Amazon AppFlow",id:"about-amazon-appflow",level:3},{value:"About Teradata Vantage",id:"about-teradata-vantage",level:3},{value:"Prerequisites",id:"prerequisites",level:3},...i.RM,{value:"Procedure",id:"procedure",level:3},{value:"Create a Salesforce to Amazon S3 Flow",id:"create-a-salesforce-to-amazon-s3-flow",level:3},{value:"Step 1: Specify flow details",id:"step-1-specify-flow-details",level:4},{value:"Step 2: Configure flow",id:"step-2-configure-flow",level:4},{value:"Step 3: Map data fields",id:"step-3-map-data-fields",level:4},{value:"Step 4: Add filters",id:"step-4-add-filters",level:4},{value:"Step 5. Review and create",id:"step-5-review-and-create",level:4},{value:"Run flow",id:"run-flow",level:4},{value:"Change data file properties",id:"change-data-file-properties",level:4},{value:"Exploring Data Using NOS",id:"exploring-data-using-nos",level:3},{value:"Create Foreign Table",id:"create-foreign-table",level:4},{value:"JSON_KEYS Table Operator",id:"json_keys-table-operator",level:4},{value:"Create View",id:"create-view",level:4},{value:"READ_NOS Table Operator",id:"read_nos-table-operator",level:4},{value:"Join Amazon S3 Data to In-Database Tables",id:"join-amazon-s3-data-to-in-database-tables",level:4},{value:"Import Amazon S3 Data to Vantage",id:"import-amazon-s3-data-to-vantage",level:4},{value:"Export Vantage Data to Amazon S3 Using NOS",id:"export-vantage-data-to-amazon-s3-using-nos",level:3},{value:"Create an Amazon S3 to Salesforce Flow",id:"create-an-amazon-s3-to-salesforce-flow",level:3},{value:"Step 1. Specify flow details",id:"step-1-specify-flow-details-1",level:4},{value:"Step 2. Configure flow",id:"step-2-configure-flow-1",level:4},{value:"Step 3. Map data fields",id:"step-3-map-data-fields-1",level:4},{value:"Step 4. Add filters",id:"step-4-add-filters-1",level:4},{value:"Step 5. Review and create",id:"step-5-review-and-create-1",level:4},{value:"Run flow",id:"run-flow-1",level:4},{value:"Cleanup (Optional)",id:"cleanup-optional",level:3},...o.RM];function h(e){const n={a:"a",code:"code",em:"em",h1:"h1",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"connect-teradata-vantage-to-salesforce-using-amazon-appflow",children:"Connect Teradata Vantage to Salesforce using Amazon Appflow"}),"\n",(0,t.jsx)(n.h3,{id:"overview",children:"Overview"}),"\n",(0,t.jsx)(n.p,{children:"This how-to describes the process to migrate data between Salesforce and Teradata Vantage. It contains two use cases:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Retrieve customer information from Salesforce, and combine it with order and shipping information from Vantage to derive analytical insights."}),"\n",(0,t.jsxs)(n.li,{children:["Update ",(0,t.jsx)(n.code,{children:"newleads"})," table on Vantage with the Salesforce data, then add the new lead(s) back to Salesforce using AppFlow."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Diagram Description automatically generated",src:a(20933).A+"",width:"1929",height:"866"})}),"\n",(0,t.jsx)(n.p,{children:"Amazon AppFlow transfers the customer account data from Salesforce to Amazon S3. Vantage then uses Native Object Store (NOS) read functionality to join the data in Amazon S3 with data in Vantage with a single query."}),"\n",(0,t.jsxs)(n.p,{children:["The account information is used to update the ",(0,t.jsx)(n.code,{children:"newleads"})," table on Vantage. Once the table is updated, Vantage writes it back to the Amazon S3 bucket with NOS Write. A Lambda function is triggered upon arrival of the new lead data file to convert the data file from Parquet format to CSV format, and AppFlow then inserts the new lead(s) back into Salesforce."]}),"\n",(0,t.jsx)(n.h3,{id:"about-amazon-appflow",children:"About Amazon AppFlow"}),"\n",(0,t.jsx)(n.p,{children:"Amazon AppFlow is a fully managed integration service that enables users to securely transfer data between Software-as-a-Service (SaaS) applications like Salesforce, Marketo, Slack, and ServiceNow, and AWS services like Amazon S3 and Amazon Redshift. AppFlow automatically encrypts data in motion, and allows users to restrict data from flowing over the public internet for SaaS applications that are integrated with AWS PrivateLink, reducing exposure to security threats."}),"\n",(0,t.jsx)(n.p,{children:"As of today, Amazon AppFlow has 16 sources to choose from, and can send the data to four destinations."}),"\n",(0,t.jsx)(n.h3,{id:"about-teradata-vantage",children:"About Teradata Vantage"}),"\n",(0,t.jsx)(n.p,{children:"Teradata Vantage is the connected multi-cloud data platform for enterprise analytics, solving data challenges from start to scale."}),"\n",(0,t.jsx)(n.p,{children:"Vantage enables companies to start small and elastically scale compute or storage, paying only for what they use, harnessing low-cost object stores and integrating their analytic workloads. Vantage supports R, Python, Teradata Studio, and any other SQL-based tools."}),"\n",(0,t.jsx)(n.p,{children:"Vantage combines descriptive, predictive, prescriptive analytics, autonomous decision-making, ML functions, and visualization tools into a unified, integrated platform that uncovers real-time business intelligence at scale, no matter where the data resides."}),"\n",(0,t.jsx)(n.p,{children:"Teradata Vantage Native Object Store (NOS) can be used to explore data\xa0in external\xa0object stores, like Amazon S3,\xa0using standard SQL.\xa0No special object storage-side compute infrastructure is required to use NOS.\xa0Users can explore data located in an Amazon S3 bucket by simply creating\xa0a NOS table definition that points to\xa0your bucket. With NOS, you can quickly import data from Amazon S3 or even join it with other tables in the Vantage database."}),"\n",(0,t.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsx)(n.p,{children:"You are expected to be familiar with Amazon AppFlow service and Teradata Vantage."}),"\n",(0,t.jsx)(n.p,{children:"You will need the following accounts, and systems:"}),"\n","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Access to a Teradata Vantage instance.","\n",(0,t.jsx)(i.Ay,{}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"An AWS account with the role that can create and run flows."}),"\n",(0,t.jsx)(n.li,{children:"An Amazon S3 bucket to store Salesforce data (i.e., ptctsoutput)"}),"\n",(0,t.jsx)(n.li,{children:"An Amazon S3 bucket to store raw Vantage data (Parquet file) (i.e., vantageparquet). This bucket needs to have policy to allow Amazon AppFlow access"}),"\n",(0,t.jsx)(n.li,{children:"An Amazon S3 bucket to store converted Vantage data (CSV file) (i.e., vantagecsv)"}),"\n",(0,t.jsxs)(n.li,{children:["A Salesforce account that satisfies the following requirements:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Your Salesforce account must be enabled for API access. API access is enabled by default for Enterprise, Unlimited, Developer, and Performance editions."}),"\n",(0,t.jsx)(n.li,{children:'Your Salesforce account must allow you to install connected apps. If this is disabled, contact your Salesforce administrator. After you create a Salesforce connection in Amazon AppFlow, verify that the connected app named "Amazon AppFlow Embedded Login App" is installed in your Salesforce account.'}),"\n",(0,t.jsx)(n.li,{children:'The refresh token policy for the "Amazon AppFlow Embedded Login App" must be set to "Refresh token is valid until revoked". Otherwise, your flows will fail when your refresh token expires.'}),"\n",(0,t.jsx)(n.li,{children:'You must enable Change Data Capture in Salesforce to use event-driven flow triggers. From Setup, enter "Change Data Capture" in Quick Find.'}),"\n",(0,t.jsxs)(n.li,{children:["If your Salesforce app enforces IP address restrictions, you must whitelist the addresses used by Amazon AppFlow. For more information, see\xa0",(0,t.jsx)(n.a,{href:"https://docs.aws.amazon.com/general/latest/gr/aws-ip-ranges.html",children:"AWS IP address ranges"}),"\xa0in the\xa0",(0,t.jsx)(n.em,{children:"Amazon Web Services General Reference"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"If you are transferring over 1 million Salesforce records, you cannot choose any Salesforce compound field. Amazon AppFlow uses Salesforce Bulk APIs for the transfer, which does not allow transfer of compound fields."}),"\n",(0,t.jsx)(n.li,{children:'To create private connections using AWS PrivateLink, you must enable both "Manager Metadata" and "Manage External Connections" user permissions in your Salesforce account. Private connections are currently available in the us-east-1 and us-west-2 AWS Regions.'}),"\n",(0,t.jsx)(n.li,{children:'Some Salesforce objects can\'t be updated, such as history objects. For these objects, Amazon AppFlow does not support incremental export (the "Transfer new data only" option) for schedule-triggered flows. Instead, you can choose the "Transfer all data" option and then select the appropriate filter to limit the records you transfer.'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"procedure",children:"Procedure"}),"\n",(0,t.jsx)(n.p,{children:"Once you have met the prerequisites, follow these steps:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Create a Salesforce to Amazon S3 Flow"}),"\n",(0,t.jsx)(n.li,{children:"Exploring Data using NOS"}),"\n",(0,t.jsx)(n.li,{children:"Export Vantage Data to Amazon S3 using NOS"}),"\n",(0,t.jsx)(n.li,{children:"Create an Amazon S3 to Salesforce Flow"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"create-a-salesforce-to-amazon-s3-flow",children:"Create a Salesforce to Amazon S3 Flow"}),"\n",(0,t.jsxs)(n.p,{children:["This step creates a flow using Amazon AppFlow. For this example, we're using a ",(0,t.jsx)(n.a,{href:"https://developer.salesforce.com/signup",children:"Salesforce developer account"})," to connect to Salesforce."]}),"\n",(0,t.jsxs)(n.p,{children:["Go to ",(0,t.jsx)(n.a,{href:"https://console.aws.amazon.com/appflow",children:"AppFlow console"}),", sign in with your AWS login credentials and click ",(0,t.jsx)(n.em,{children:"Create flow"}),". Make sure you are in the right region, and the bucket is created to store Salesforce data."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"A screenshot of a social media post Description automatically generated",src:a(68668).A+"",width:"806",height:"540"})}),"\n",(0,t.jsx)(n.h4,{id:"step-1-specify-flow-details",children:"Step 1: Specify flow details"}),"\n",(0,t.jsx)(n.p,{children:"This step provides basic information for your flow."}),"\n",(0,t.jsxs)(n.p,{children:["Fill in ",(0,t.jsx)(n.strong,{children:"Flow name"})," (i.e. ",(0,t.jsx)(n.em,{children:"salesforce"}),") and ",(0,t.jsx)(n.strong,{children:"Flow description (optional)"}),", leave ",(0,t.jsx)(n.strong,{children:"Customize encryption settings (advanced)"})," unchecked. Click ",(0,t.jsx)(n.strong,{children:"Next"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"step-2-configure-flow",children:"Step 2: Configure flow"}),"\n",(0,t.jsxs)(n.p,{children:["This step provides information about the source and destination for your flow. For this example, we will be using ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"Salesforce"})})," as the source, and ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"Amazon S3"})})," as the destination."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["For ",(0,t.jsx)(n.em,{children:"Source name"}),", choose ",(0,t.jsx)(n.em,{children:"Salesforce"}),", then ",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.em,{children:"Create new connection"})})," for ",(0,t.jsx)(n.em,{children:"Choose Salesforce connection"}),".\n",(0,t.jsx)(n.img,{alt:"A screenshot of a cell phone Description automatically generated",src:a(66067).A+"",width:"858",height:"540"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Use default for ",(0,t.jsx)(n.strong,{children:"Salesforce environment"})," and ",(0,t.jsx)(n.strong,{children:"Data encryption"}),". Give your connection a name (i.e. ",(0,t.jsx)(n.em,{children:"salesforce"}),") and click ",(0,t.jsx)(n.strong,{children:"Continue"}),".\n",(0,t.jsx)(n.img,{alt:"A screenshot of a cell phone Description automatically generated",src:a(50506).A+"",width:"820",height:"493"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["At the salesforce login window, enter your ",(0,t.jsx)(n.strong,{children:"Username"})," and ",(0,t.jsx)(n.strong,{children:"Password"}),". Click ",(0,t.jsx)(n.strong,{children:"Log In"}),"\n",(0,t.jsx)(n.img,{alt:"A screenshot of a cell phone Description automatically generated",src:a(91585).A+"",width:"1047",height:"828"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Click ",(0,t.jsx)(n.strong,{children:"Allow"})," to allow AppFlow to access your salesforce data and information.\n",(0,t.jsx)(n.img,{alt:"A screenshot of a cell phone Description automatically generated",src:a(70456).A+"",width:"666",height:"540"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Back at the AppFlow ",(0,t.jsx)(n.strong,{children:"Configure flow"})," window, use ",(0,t.jsx)(n.strong,{children:"Salesforce objects"}),", and choose ",(0,t.jsx)(n.em,{children:"Account"})," to be the Salesforce object.\n",(0,t.jsx)(n.img,{alt:"A screenshot of a cell phone Description automatically generated,",src:a(45263).A+"",width:"862",height:"540"}),"\n",(0,t.jsx)(n.img,{alt:"A screenshot of a cell phone Description automatically generated",src:a(80070).A+"",width:"1282",height:"800"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Use ",(0,t.jsx)(n.em,{children:"Amazon S3"})," as ",(0,t.jsx)(n.strong,{children:"Destination name"}),". Pick the bucket you created ",(0,t.jsx)(n.a,{href:"#prerequisites",children:"earlier"})," where you want the data to be stored (i.e., ",(0,t.jsx)(n.em,{children:"ptctsoutput"}),").\n",(0,t.jsx)(n.img,{alt:"A screenshot of a cell phone Description automatically generated",src:a(27020).A+"",width:"1559",height:"888"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Flow trigger"})," is ",(0,t.jsx)(n.em,{children:"Run on demand"}),". Click ",(0,t.jsx)(n.strong,{children:"Next"}),".\n",(0,t.jsx)(n.img,{alt:"A screenshot of a cell phone Description automatically generated",src:a(79285).A+"",width:"1596",height:"882"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"step-3-map-data-fields",children:"Step 3: Map data fields"}),"\n",(0,t.jsx)(n.p,{children:"This step determines how data is transferred from the source to the destination."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.em,{children:"Manually map fields"})," as ",(0,t.jsx)(n.strong,{children:"Mapping method"})]}),"\n",(0,t.jsxs)(n.li,{children:["For simplicity, choose ",(0,t.jsx)(n.em,{children:"Map all fields directly"})," for ",(0,t.jsx)(n.strong,{children:"Source to destination filed mapping"}),".\n",(0,t.jsx)(n.img,{alt:"A screenshot of a cell phone Description automatically generated",src:a(77182).A+"",width:"948",height:"540"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:['Once you click on "',(0,t.jsx)(n.em,{children:"Map all fields directly"}),'", all the fields will show under ',(0,t.jsx)(n.strong,{children:"Mapped fields"}),". Click on the checkbox for the field(s) you want to ",(0,t.jsx)(n.strong,{children:"Add formula (concatenates)"}),", ",(0,t.jsx)(n.strong,{children:"Modify values (mask or truncate field values)"}),", or ",(0,t.jsx)(n.strong,{children:"Remove selected mappings"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"For this example, no checkbox will be ticked."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["For ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"Validations"})}),', add in a condition to ignore the record that contains no "',(0,t.jsx)(n.em,{children:"Billing Address"}),'" (optional). Click ',(0,t.jsx)(n.strong,{children:"Next"}),".\n",(0,t.jsx)(n.img,{alt:"A screenshot of a cell phone Description automatically generated",src:a(46023).A+"",width:"1346",height:"286"})]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"step-4-add-filters",children:"Step 4: Add filters"}),"\n",(0,t.jsxs)(n.p,{children:["You can specify a filter to determine which records to transfer. For this example, add a condition to filter out the records that are deleted (optional). Click ",(0,t.jsx)(n.strong,{children:"Next"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"A screenshot of a cell phone Description automatically generated",src:a(66408).A+"",width:"1644",height:"474"})}),"\n",(0,t.jsx)(n.h4,{id:"step-5-review-and-create",children:"Step 5. Review and create"}),"\n",(0,t.jsxs)(n.p,{children:["Review all the information you just entered. Modify if necessary. Click ",(0,t.jsx)(n.strong,{children:"Create flow"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"A message of successful flow creation will be displayed with the flow information once the flow is created,"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"A screenshot of a cell phone Description automatically generated",src:a(60273).A+"",width:"960",height:"348"})}),"\n",(0,t.jsx)(n.h4,{id:"run-flow",children:"Run flow"}),"\n",(0,t.jsxs)(n.p,{children:["Click ",(0,t.jsx)(n.strong,{children:"Run flow"})," on the upper right corner."]}),"\n",(0,t.jsx)(n.p,{children:"Upon completion of the flow run, message will be displayed to indicate a successful run."}),"\n",(0,t.jsx)(n.p,{children:"Message example:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:a(39162).A+"",width:"1625",height:"162"})}),"\n",(0,t.jsx)(n.p,{children:"Click the link to the bucket to view data. Salesforce data will be in JSON format."}),"\n",(0,t.jsx)(n.h4,{id:"change-data-file-properties",children:"Change data file properties"}),"\n",(0,t.jsx)(n.p,{children:"By default, Salesforce data is encrypted. We need to remove the encryption for NOS to access it."}),"\n",(0,t.jsxs)(n.p,{children:["Click on the data file in your Amazon S3 bucket, then click the ",(0,t.jsx)(n.strong,{children:"Properties"})," tab."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"A screenshot of a social media post Description automatically generated",src:a(3267).A+"",width:"768",height:"540"})}),"\n",(0,t.jsxs)(n.p,{children:["Click on the ",(0,t.jsx)(n.em,{children:"AWS-KMS"})," from ",(0,t.jsx)(n.strong,{children:"Encryption"})," and change it from ",(0,t.jsx)(n.em,{children:"AWS-KMS"})," encryption to ",(0,t.jsx)(n.em,{children:"None"}),". Click ",(0,t.jsx)(n.strong,{children:"Save"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"A screenshot of a social media post Description automatically generate",src:a(43044).A+"",width:"1657",height:"861"})}),"\n",(0,t.jsx)(n.h3,{id:"exploring-data-using-nos",children:"Exploring Data Using NOS"}),"\n",(0,t.jsx)(n.p,{children:"Native Object Store has built in functionalities to explore and analyze data in Amazon S3. This section lists a few commonly used functions of NOS."}),"\n",(0,t.jsx)(n.h4,{id:"create-foreign-table",children:"Create Foreign Table"}),"\n",(0,t.jsx)(n.p,{children:"Foreign table allows the external data to be easily referenced within the Vantage Advanced SQL Engine and makes the data available in a structured relational format."}),"\n",(0,t.jsx)(n.p,{children:"To create a foreign table, first login to Teradata Vantage system with your credentials. Create AUTHORIZATION object with access keys for Amazon S3 bucket access. Authorization object enhances security by establishing control over who is allowed to use a foreign table to access Amazon S3 data."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE AUTHORIZATION DefAuth_S3\nAS DEFINER TRUSTED\nUSER 'A*****************' /* AccessKeyId */\nPASSWORD '********'; /* SecretAccessKey */\n"})}),"\n",(0,t.jsx)(n.p,{children:'"USER" is the AccessKeyId for your AWS account, and "PASSWORD" is the SecretAccessKey.'}),"\n",(0,t.jsx)(n.p,{children:"Create a foreign table against the JSON file on Amazon S3 using following command."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE MULTISET FOREIGN TABLE salesforce,\nEXTERNAL SECURITY DEFINER TRUSTED DefAuth_S3\n(\n  Location VARCHAR(2048) CHARACTER SET UNICODE CASESPECIFIC,\n  Payload JSON(8388096) INLINE LENGTH 32000 CHARACTER SET UNICODE\n)\nUSING\n(\n  LOCATION ('/S3/s3.amazonaws.com/ptctstoutput/salesforce/1ce190bc-25a9-4493-99ad-7497b497a0d0/903790813-2020-08-21T21:02:25')\n);\n"})}),"\n",(0,t.jsx)(n.p,{children:'At a minimum, the foreign table definition must include a table name and location clause (highlighted in yellow) which points to the object store data. The Location requires a top-level single name, referred to as a "bucket" in Amazon.'}),"\n",(0,t.jsx)(n.p,{children:"If the file name doesn't have standard extension (.json, .csv, .parquet) at the end, the Location and Payload columns definition is also required (highlighted in turquoise) to indicate the type of the data file."}),"\n",(0,t.jsx)(n.p,{children:"Foreign tables are always defined as No Primary Index (NoPI) tables."}),"\n",(0,t.jsx)(n.p,{children:'Once foreign table\'s created, you can query the content of the Amazon S3 data set by doing "Select" on the foreign table.'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM salesforce;\nSELECT payload.* FROM salesforce;\n"})}),"\n",(0,t.jsx)(n.p,{children:"The foreign table only contains two columns: Location and Payload. Location is the address in the object store system. The data itself is represented in the payload column, with the payload value within each record in the foreign table representing a single JSON object and all its name-value pairs."}),"\n",(0,t.jsx)(n.p,{children:'Sample output from "SELECT * FROM salesforce;".'}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"A picture containing monitor Description automatically generated",src:a(96941).A+"",width:"636",height:"262"})}),"\n",(0,t.jsx)(n.p,{children:'Sample output form "SELECT payload.* FROM salesforce;".'}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"A screenshot of a cell phone Description automatically generated",src:a(97441).A+"",width:"629",height:"260"})}),"\n",(0,t.jsx)(n.h4,{id:"json_keys-table-operator",children:"JSON_KEYS Table Operator"}),"\n",(0,t.jsx)(n.p,{children:"JSON data may contain different attributes in different records. To determine the full list of possible attributes in a data store, use JSON_KEYS:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"|SELECT DISTINCT * FROM JSON_KEYS (ON (SELECT payload FROM salesforce)) AS j;\n"})}),"\n",(0,t.jsx)(n.p,{children:"Partial Output:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"A screenshot of a cell phone Description automatically generated",src:a(76312).A+"",width:"255",height:"292"})}),"\n",(0,t.jsx)(n.h4,{id:"create-view",children:"Create View"}),"\n",(0,t.jsx)(n.p,{children:"Views can simplify the names associated with the payload attributes, make it easier to code executable SQL against object store data, and hide the Location references in the foreign table to make it look like normal columns."}),"\n",(0,t.jsx)(n.p,{children:"Following is a sample create view statement with the attributes discovered from the JSON_KEYS table operator above."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:'REPLACE VIEW salesforceView AS (\n  SELECT\n    CAST(payload.Id AS VARCHAR(20)) Customer_ID,\n    CAST(payload."Name" AS VARCHAR(100)) Customer_Name,\n    CAST(payload.AccountNumber AS VARCHAR(10)) Acct_Number,\n    CAST(payload.BillingStreet AS VARCHAR(20)) Billing_Street,\n    CAST(payload.BillingCity AS VARCHAR(20)) Billing_City,\n    CAST(payload.BillingState AS VARCHAR(10)) Billing_State,\n    CAST(payload.BillingPostalCode AS VARCHAR(5)) Billing_Post_Code,\n    CAST(payload.BillingCountry AS VARCHAR(20)) Billing_Country,\n    CAST(payload.Phone AS VARCHAR(15)) Phone,\n    CAST(payload.Fax AS VARCHAR(15)) Fax,\n    CAST(payload.ShippingStreet AS VARCHAR(20)) Shipping_Street,\n    CAST(payload.ShippingCity AS VARCHAR(20)) Shipping_City,\n    CAST(payload.ShippingState AS VARCHAR(10)) Shipping_State,\n    CAST(payload.ShippingPostalCode AS VARCHAR(5)) Shipping_Post_Code,\n    CAST(payload.ShippingCountry AS VARCHAR(20)) Shipping_Country,\n    CAST(payload.Industry AS VARCHAR(50)) Industry,\n    CAST(payload.Description AS VARCHAR(200)) Description,\n    CAST(payload.NumberOfEmployees AS VARCHAR(10)) Num_Of_Employee,\n    CAST(payload.CustomerPriority__c AS VARCHAR(10)) Priority,\n    CAST(payload.Rating AS VARCHAR(10)) Rating,\n    CAST(payload.SLA__c AS VARCHAR(10)) SLA,\n    CAST(payload.AnnualRevenue AS VARCHAR(10)) Annual_Revenue,\n    CAST(payload."Type" AS VARCHAR(20)) Customer_Type,\n    CAST(payload.Website AS VARCHAR(100)) Customer_Website,\n    CAST(payload.LastActivityDate AS VARCHAR(50)) Last_Activity_Date\n  FROM salesforce\n);\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM salesforceView;\n"})}),"\n",(0,t.jsx)(n.p,{children:"Partial output:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"A picture containing computer Description automatically generated",src:a(71923).A+"",width:"1675",height:"264"})}),"\n",(0,t.jsx)(n.h4,{id:"read_nos-table-operator",children:"READ_NOS Table Operator"}),"\n",(0,t.jsx)(n.p,{children:"READ_NOS table operator can be used to sample and explore a percent of the data without having first defined a foreign table, or to view a list of the keys associated with all the objects specified by a Location clause."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT top 5 payload.*\nFROM READ_NOS (\n ON (SELECT CAST(NULL AS JSON CHARACTER SET Unicode))\nUSING\nLOCATION ('/S3/s3.amazonaws.com/ptctstoutput/salesforce/1ce190bc-25a9-4493-99ad-7497b497a0d0/903790813-2020-08-21T21:02:25')\n ACCESS_ID ('A**********') /* AccessKeyId */\n ACCESS_KEY ('***********') /* SecretAccessKey */\n ) AS D\nGROUP BY 1;\n"})}),"\n",(0,t.jsx)(n.p,{children:"Output:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"A screenshot of a cell phone Description automatically generate",src:a(40010).A+"",width:"310",height:"226"})}),"\n",(0,t.jsx)(n.h4,{id:"join-amazon-s3-data-to-in-database-tables",children:"Join Amazon S3 Data to In-Database Tables"}),"\n",(0,t.jsx)(n.p,{children:"Foreign table can be joined with a table(s) in Vantage for further analysis. For example, ordering and shipping information are in Vantage in these three tables \u2013 Orders, Order_Items and Shipping_Address."}),"\n",(0,t.jsx)(n.p,{children:"DDL for Orders:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE Orders (\n  Order_ID INT NOT NULL,\n  Customer_ID VARCHAR(20) CHARACTER SET LATIN CASESPECIFIC,\n  Order_Status INT,\n  -- Order status: 1 = Pending; 2 = Processing; 3 = Rejected; 4 = Completed\n  Order_Date DATE NOT NULL,\n  Required_Date DATE NOT NULL,\n  Shipped_Date DATE,\n  Store_ID INT NOT NULL,\n  Staff_ID INT NOT NULL\n) Primary Index (Order_ID);\n"})}),"\n",(0,t.jsx)(n.p,{children:"DDL for Order_Items:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE Order_Items(\n  Order_ID INT NOT NULL,\n  Item_ID INT,\n  Product_ID INT NOT NULL,\n  Quantity INT NOT NULL,\n  List_Price DECIMAL (10, 2) NOT NULL,\n  Discount DECIMAL (4, 2) NOT NULL DEFAULT 0\n) Primary Index (Order_ID, Item_ID);\n"})}),"\n",(0,t.jsx)(n.p,{children:"DDL for Shipping_Address:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE Shipping_Address (\n  Customer_ID VARCHAR(20) CHARACTER SET LATIN CASESPECIFIC NOT NULL,\n  Street VARCHAR(100) CHARACTER SET LATIN CASESPECIFIC,\n  City VARCHAR(20) CHARACTER SET LATIN CASESPECIFIC,\n  State VARCHAR(15) CHARACTER SET LATIN CASESPECIFIC,\n  Postal_Code VARCHAR(10) CHARACTER SET LATIN CASESPECIFIC,\n  Country VARCHAR(20) CHARACTER SET LATIN CASESPECIFIC\n) Primary Index (Customer_ID);\n"})}),"\n",(0,t.jsx)(n.p,{children:"And the tables have following data:"}),"\n",(0,t.jsx)(n.p,{children:"Orders:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:a(26789).A+"",width:"852",height:"70"})}),"\n",(0,t.jsx)(n.p,{children:"Order_Items:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:a(74524).A+"",width:"579",height:"60"})}),"\n",(0,t.jsx)(n.p,{children:"Shipping_Address:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:a(98455).A+"",width:"732",height:"63"})}),"\n",(0,t.jsx)(n.p,{children:"By joining the salesforce foreign table to the established database table Orders, Order_Items and Shipping_Address, we can retrieve customer's order information with customer's shipping information."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:'SELECT\n  s.payload.Id as Customer_ID,\n  s.payload."Name" as Customer_Name,\n  s.payload.AccountNumber as Acct_Number,\n  o.Order_ID as Order_ID,\n  o.Order_Status as Order_Status,\n  o.Order_Date as Order_Date,\n  oi.Item_ID as Item_ID,\n  oi.Product_ID as Product_ID,\n  sa.Street as Shipping_Street,\n  sa.City as Shipping_City,\n  sa.State as Shipping_State,\n  sa.Postal_Code as Shipping_Postal_Code,\n  sa.Country as Shipping_Country\nFROM\n  salesforce s, Orders o, Order_Items oi, Shipping_Address sa\nWHERE\n  s.payload.Id = o.Customer_ID\n  AND o.Customer_ID = sa.Customer_ID\n  AND o.Order_ID = oi.Order_ID\nORDER BY 1;\n'})}),"\n",(0,t.jsx)(n.p,{children:"Results:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:a(98958).A+"",width:"1404",height:"61"})}),"\n",(0,t.jsx)(n.h4,{id:"import-amazon-s3-data-to-vantage",children:"Import Amazon S3 Data to Vantage"}),"\n",(0,t.jsx)(n.p,{children:"Having a persistent copy of the Amazon S3 data can be useful when repetitive access of the same data is expected. NOS foreign table does not automatically make a persistent copy of the Amazon S3 data. A few approaches to capture the data in the database are described below:"}),"\n",(0,t.jsx)(n.p,{children:'A "CREATE TABLE AS \u2026 WITH DATA" statement can be used with the foreign table definition acting as the source table. Use this approach you can selectively choose which attributes within the foreign table payload that you want to include in the target table, and what the relational table columns will be named.'}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:'CREATE TABLE salesforceVantage AS (\n  SELECT\n    CAST(payload.Id AS VARCHAR(20)) Customer_ID,\n    CAST(payload."Name" AS VARCHAR(100)) Customer_Name,\n    CAST(payload.AccountNumber AS VARCHAR(10)) Acct_Number,\n    CAST(payload.BillingStreet AS VARCHAR(20)) Billing_Street,\n    CAST(payload.BillingCity AS VARCHAR(20)) Billing_City,\n    CAST(payload.BillingState AS VARCHAR(10)) Billing_State,\n    CAST(payload.BillingPostalCode AS VARCHAR(5)) Billing_Post_Code,\n    CAST(payload.BillingCountry AS VARCHAR(20)) Billing_Country,\n    CAST(payload.Phone AS VARCHAR(15)) Phone,\n    CAST(payload.Fax AS VARCHAR(15)) Fax,\n    CAST(payload.ShippingStreet AS VARCHAR(20)) Shipping_Street,\n    CAST(payload.ShippingCity AS VARCHAR(20)) Shipping_City,\n    CAST(payload.ShippingState AS VARCHAR(10)) Shipping_State,\n    CAST(payload.ShippingPostalCode AS VARCHAR(5)) Shipping_Post_Code,\n    CAST(payload.ShippingCountry AS VARCHAR(20)) Shipping_Country,\n    CAST(payload.Industry AS VARCHAR(50)) Industry,\n    CAST(payload.Description AS VARCHAR(200)) Description,\n    CAST(payload.NumberOfEmployees AS INT) Num_Of_Employee,\n    CAST(payload.CustomerPriority__c AS VARCHAR(10)) Priority,\n    CAST(payload.Rating AS VARCHAR(10)) Rating,\n    CAST(payload.SLA__c AS VARCHAR(10)) SLA,\n    CAST(payload."Type" AS VARCHAR(20)) Customer_Type,\n    CAST(payload.Website AS VARCHAR(100)) Customer_Website,\n    CAST(payload.AnnualRevenue AS VARCHAR(10)) Annual_Revenue,\n    CAST(payload.LastActivityDate AS DATE) Last_Activity_Date\n  FROM salesforce)\nWITH DATA\nNO PRIMARY INDEX;\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"SELECT* * *FROM* salesforceVantage;"})," partial results:"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"A screenshot of a computer Description automatically generated",src:a(88345).A+"",width:"1699",height:"264"})}),"\n",(0,t.jsx)(n.p,{children:"An alternative to using foreign table is to use the READ_NOS table operator. This table operator allows you to access data directly from an object store without first building a foreign table. Combining READ_NOS with a CREATE TABLE AS clause to build a persistent version of the data in the database."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE salesforceReadNOS AS (\n SELECT\n    CAST(payload.Id AS VARCHAR(20)) Customer_ID,\n    CAST(payload.\"Name\" AS VARCHAR(100)) Customer_Name,\n    CAST(payload.AccountNumber AS VARCHAR(10)) Acct_Number,\n    CAST(payload.BillingStreet AS VARCHAR(20)) Billing_Street,\n    CAST(payload.BillingCity AS VARCHAR(20)) Billing_City,\n    CAST(payload.BillingState AS VARCHAR(10)) Billing_State,\n    CAST(payload.BillingPostalCode AS VARCHAR(5)) Billing_Post_Code,\n    CAST(payload.BillingCountry AS VARCHAR(20)) Billing_Country,\n    CAST(payload.Phone AS VARCHAR(15)) Phone,\n    CAST(payload.Fax AS VARCHAR(15)) Fax,\n    CAST(payload.ShippingStreet AS VARCHAR(20)) Shipping_Street,\n    CAST(payload.ShippingCity AS VARCHAR(20)) Shipping_City,\n    CAST(payload.ShippingState AS VARCHAR(10)) Shipping_State,\n    CAST(payload.ShippingPostalCode AS VARCHAR(5)) Shipping_Post_Code,\n    CAST(payload.ShippingCountry AS VARCHAR(20)) Shipping_Country,\n    CAST(payload.Industry AS VARCHAR(50)) Industry,\n    CAST(payload.Description AS VARCHAR(200)) Description,\n    CAST(payload.NumberOfEmployees AS INT) Num_Of_Employee,\n    CAST(payload.CustomerPriority__c AS VARCHAR(10)) Priority,\n    CAST(payload.Rating AS VARCHAR(10)) Rating,\n    CAST(payload.SLA__c AS VARCHAR(10)) SLA,\n    CAST(payload.\"Type\" AS VARCHAR(20)) Customer_Type,\n    CAST(payload.Website AS VARCHAR(100)) Customer_Website,\n    CAST(payload.AnnualRevenue AS VARCHAR(10)) Annual_Revenue,\n    CAST(payload.LastActivityDate AS DATE) Last_Activity_Date\n  FROM READ_NOS (\n    ON (SELECT CAST(NULL AS JSON CHARACTER SET Unicode))\n    USING\n      LOCATION ('/S3/s3.amazonaws.com/ptctstoutput/salesforce/1ce190bc-25a9-4493-99ad-7497b497a0d0/903790813-2020-08-21T21:02:25')\n      ACCESS_ID ('A**********') /* AccessKeyId */\n      ACCESS_KEY ('***********') /* SecretAccessKey */\n  ) AS D\n) WITH DATA;\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Results from the ",(0,t.jsx)(n.code,{children:"salesforceReadNOS"})," table:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM salesforceReadNOS;\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"A picture containing large, people, riding Description automatically generated",src:a(82096).A+"",width:"1689",height:"263"})}),"\n",(0,t.jsx)(n.p,{children:'Another way of placing Amazon S3 data into a relational table is by "INSERT SELECT". Using this approach, the foreign table is the source table, while a newly created permanent table is the table to be inserted into. Contrary to the READ_NOS example above, this approach does require the permanent table be created beforehand.'}),"\n",(0,t.jsxs)(n.p,{children:["One advantage of the INSERT SELECT method is that you can change the target table's attributes. For example, you can specify that the target table be ",(0,t.jsx)(n.code,{children:"MULTISET"})," or not, or you can choose a different primary index."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE salesforcePerm, FALLBACK ,\nNO BEFORE JOURNAL,\nNO AFTER JOURNAL,\nCHECKSUM = DEFAULT,\nDEFAULT MERGEBLOCKRATIO,\nMAP = TD_MAP1\n(\n  Customer_Id VARCHAR(20) CHARACTER SET LATIN NOT CASESPECIFIC,\n  Customer_Name VARCHAR(100) CHARACTER SET LATIN NOT CASESPECIFIC,\n  Acct_Number VARCHAR(10) CHARACTER SET LATIN NOT CASESPECIFIC,\n  Billing_Street VARCHAR(20) CHARACTER SET LATIN NOT CASESPECIFIC,\n  Billing_City VARCHAR(20) CHARACTER SET LATIN NOT CASESPECIFIC,\n  Billing_State VARCHAR(10) CHARACTER SET LATIN NOT CASESPECIFIC,\n  Billing_Post_Code VARCHAR(5) CHARACTER SET LATIN NOT CASESPECIFIC,\n  Billing_Country VARCHAR(20) CHARACTER SET LATIN NOT CASESPECIFIC,\n  Phone VARCHAR(15) CHARACTER SET LATIN NOT CASESPECIFIC,\n  Fax VARCHAR(15) CHARACTER SET LATIN NOT CASESPECIFIC,\n  Shipping_Street VARCHAR(20) CHARACTER SET LATIN NOT CASESPECIFIC,\n  Shipping_City VARCHAR(20) CHARACTER SET LATIN NOT CASESPECIFIC,\n  Shipping_State VARCHAR(10) CHARACTER SET LATIN NOT CASESPECIFIC,\n  Shipping_Post_Code VARCHAR(5) CHARACTER SET LATIN NOT CASESPECIFIC,\n  Shipping_Country VARCHAR(20) CHARACTER SET LATIN NOT CASESPECIFIC,\n  Industry VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC,\n  Description VARCHAR(200) CHARACTER SET LATIN NOT CASESPECIFIC,\n  Num_Of_Employee INT,\n  Priority VARCHAR(10) CHARACTER SET LATIN NOT CASESPECIFIC,\n  Rating VARCHAR(10) CHARACTER SET LATIN NOT CASESPECIFIC,\n  SLA VARCHAR(10) CHARACTER SET LATIN NOT CASESPECIFIC,\n  Customer_Type VARCHAR(20) CHARACTER SET LATIN NOT CASESPECIFIC,\n  Customer_Website VARCHAR(100) CHARACTER SET LATIN NOT CASESPECIFIC,\n  Annual_Revenue VARCHAR(10) CHARACTER SET LATIN NOT CASESPECIFIC,\n  Last_Activity_Date DATE\n) PRIMARY INDEX (Customer_ID);\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:'INSERT INTO salesforcePerm\n  SELECT\n    CAST(payload.Id AS VARCHAR(20)) Customer_ID,\n    CAST(payload."Name" AS VARCHAR(100)) Customer_Name,\n    CAST(payload.AccountNumber AS VARCHAR(10)) Acct_Number,\n    CAST(payload.BillingStreet AS VARCHAR(20)) Billing_Street,\n    CAST(payload.BillingCity AS VARCHAR(20)) Billing_City,\n    CAST(payload.BillingState AS VARCHAR(10)) Billing_State,\n    CAST(payload.BillingPostalCode AS VARCHAR(5)) Billing_Post_Code,\n    CAST(payload.BillingCountry AS VARCHAR(20)) Billing_Country,\n    CAST(payload.Phone AS VARCHAR(15)) Phone,\n    CAST(payload.Fax AS VARCHAR(15)) Fax,\n    CAST(payload.ShippingStreet AS VARCHAR(20)) Shipping_Street,\n    CAST(payload.ShippingCity AS VARCHAR(20)) Shipping_City,\n    CAST(payload.ShippingState AS VARCHAR(10)) Shipping_State,\n    CAST(payload.ShippingPostalCode AS VARCHAR(5)) Shipping_Post_Code,\n    CAST(payload.ShippingCountry AS VARCHAR(20)) Shipping_Country,\n    CAST(payload.Industry AS VARCHAR(50)) Industry,\n    CAST(payload.Description AS VARCHAR(200)) Description,\n    CAST(payload.NumberOfEmployees AS INT) Num_Of_Employee,\n    CAST(payload.CustomerPriority__c AS VARCHAR(10)) Priority,\n    CAST(payload.Rating AS VARCHAR(10)) Rating,\n    CAST(payload.SLA__c AS VARCHAR(10)) SLA,\n    CAST(payload."Type" AS VARCHAR(20)) Customer_Type,\n    CAST(payload.Website AS VARCHAR(100)) Customer_Website,\n    CAST(payload.AnnualRevenue AS VARCHAR(10)) Annual_Revenue,\n    CAST(payload.LastActivityDate AS DATE) Last_Activity_Date\n  FROM salesforce;\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM salesforcePerm;\n"})}),"\n",(0,t.jsx)(n.p,{children:"Sample results:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"A picture containing people Description automatically generated",src:a(6630).A+"",width:"1694",height:"260"})}),"\n",(0,t.jsx)(n.h3,{id:"export-vantage-data-to-amazon-s3-using-nos",children:"Export Vantage Data to Amazon S3 Using NOS"}),"\n",(0,t.jsxs)(n.p,{children:["I have a ",(0,t.jsx)(n.code,{children:"newleads"})," table with 1 row in it on Vantage system."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:a(31058).A+"",width:"2002",height:"79"})}),"\n",(0,t.jsxs)(n.p,{children:["Note there's no address information for this lead. Let's use the account information retrieved from Salesforce to update ",(0,t.jsx)(n.code,{children:"newleads"})," table"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"UPDATE nl\nFROM\n  newleads AS nl,\n  salesforceReadNOS AS srn\nSET\n  Street = srn.Billing_Street,\n  City = srn.Billing_City,\n  State = srn.Billing_State,\n  Post_Code = srn.Billing_Post_Code,\n  Country = srn.Billing_Country\n  WHERE Account_ID = srn.Acct_Number;\n"})}),"\n",(0,t.jsx)(n.p,{children:"Now the new lead has address information."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:a(96201).A+"",width:"2002",height:"70"})}),"\n",(0,t.jsx)(n.p,{children:"Write the new lead information into S3 bucket using WRITE_NOS."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",metastring:', id="salesforce_first_run", role="content-editable emits-gtm-events"',children:"SELECT * FROM WRITE_NOS (\nON (\n  SELECT\n    Account_ID,\n    Last_Name,\n    First_Name,\n    Company,\n    Cust_Title,\n    Email,\n    Status,\n    Owner_ID,\n    Street,\n    City,\n    State,\n    Post_Code,\n    Country\n  FROM newleads\n)\nUSING\n  LOCATION ('/s3/vantageparquet.s3.amazonaws.com/')\n  AUTHORIZATION ('{\"Access_ID\":\"A*****\",\"Access_Key\":\"*****\"}')\n  COMPRESSION ('SNAPPY')\n  NAMING ('DISCRETE')\n  INCLUDE_ORDERING ('FALSE')\n  STOREDAS ('CSV')\n) AS d;\n"})}),"\n",(0,t.jsx)(n.p,{children:"Where Access_ID is the AccessKeyID, and Access_Key is the SecretAccessKey to the bucket."}),"\n",(0,t.jsx)(n.h3,{id:"create-an-amazon-s3-to-salesforce-flow",children:"Create an Amazon S3 to Salesforce Flow"}),"\n",(0,t.jsx)(n.p,{children:"Repeat Step 1 to create a flow using Amazon S3 as source and Salesforce as destination."}),"\n",(0,t.jsx)(n.h4,{id:"step-1-specify-flow-details-1",children:"Step 1. Specify flow details"}),"\n",(0,t.jsx)(n.p,{children:"This step provides basic information for your flow."}),"\n",(0,t.jsxs)(n.p,{children:["Fill in ",(0,t.jsx)(n.em,{children:"Flow name"})," (i.e., ",(0,t.jsx)(n.em,{children:"vantage2sf"}),") and ",(0,t.jsx)(n.em,{children:"Flow description (optional)"}),", leave ",(0,t.jsx)(n.em,{children:"Customize encryption settings (advanced)"})," unchecked. Click ",(0,t.jsx)(n.em,{children:"Next"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"step-2-configure-flow-1",children:"Step 2. Configure flow"}),"\n",(0,t.jsxs)(n.p,{children:["This step provides information about the source and destination for your flow. For this example, we will be using ",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.em,{children:"Amazon S3"})})," as the source, and ",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.em,{children:"Salesforce"})})," as the destination."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["For ",(0,t.jsx)(n.em,{children:"Source details"}),", choose ",(0,t.jsx)(n.em,{children:"Amazon S3"}),", then choose the bucket where you wrote your CSV file to (i.e. vantagecsv)"]}),"\n",(0,t.jsxs)(n.li,{children:["For ",(0,t.jsx)(n.em,{children:"Destination details"}),", choose ",(0,t.jsx)(n.em,{children:"Salesforce"}),", use the connection you created in Step 1 from the drop-down list for ",(0,t.jsx)(n.em,{children:"Choose Salesforce connection"}),", and ",(0,t.jsx)(n.em,{children:"Lead"})," as ",(0,t.jsx)(n.em,{children:"Choose Salesforce object"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["For ",(0,t.jsx)(n.em,{children:"Error handling"}),", use the default ",(0,t.jsx)(n.em,{children:"Stop the current flow run"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.em,{children:"Flow trigger"})," is ",(0,t.jsx)(n.em,{children:"Run on demand"}),". Click ",(0,t.jsx)(n.em,{children:"Next"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"step-3-map-data-fields-1",children:"Step 3. Map data fields"}),"\n",(0,t.jsx)(n.p,{children:"This step determines how data is transferred from the source to the destination."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Use ",(0,t.jsx)(n.em,{children:"Manually map fields"})," as ",(0,t.jsx)(n.em,{children:"Mapping method"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Use ",(0,t.jsx)(n.em,{children:"Insert new records (default)"})," as ",(0,t.jsx)(n.em,{children:"Destination record preference"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["For ",(0,t.jsx)(n.em,{children:"Source to destination filed mapping"}),", use the following mapping\n",(0,t.jsx)(n.img,{alt:"Graphical user interface, application, table Description automatically generated",src:a(41376).A+"",width:"1770",height:"1125"}),"\n",(0,t.jsx)(n.img,{src:a(31).A+"",width:"2002",height:"133"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Click ",(0,t.jsx)(n.em,{children:"Next"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"step-4-add-filters-1",children:"Step 4. Add filters"}),"\n",(0,t.jsxs)(n.p,{children:["You can specify a filter to determine which records to transfer. For this example, no filter is added. Click ",(0,t.jsx)(n.em,{children:"Next"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"step-5-review-and-create-1",children:"Step 5. Review and create"}),"\n",(0,t.jsxs)(n.p,{children:["Review all the information you just entered. Modify if necessary. Click ",(0,t.jsx)(n.em,{children:"Create flow"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"A message of successful flow creation will be displayed with the flow information once the flow is created,"}),"\n",(0,t.jsx)(n.h4,{id:"run-flow-1",children:"Run flow"}),"\n",(0,t.jsxs)(n.p,{children:["Click ",(0,t.jsx)(n.em,{children:"Run flow"})," on the upper right corner."]}),"\n",(0,t.jsx)(n.p,{children:"Upon completion of the flow run, message will be displayed to indicate a successful run."}),"\n",(0,t.jsx)(n.p,{children:"Message example:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:a(21942).A+"",width:"2002",height:"166"})}),"\n",(0,t.jsx)(n.p,{children:"Browse to the Salesforce page, new lead Tom Johnson has been added."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Graphical user interface, application Description automatically generated",src:a(12621).A+"",width:"2004",height:"929"})}),"\n",(0,t.jsx)(n.h3,{id:"cleanup-optional",children:"Cleanup (Optional)"}),"\n",(0,t.jsxs)(n.p,{children:["Once you are done with the Salesforce data, to avoid incurring charges to your AWS account (i.e., ",(0,t.jsx)(n.a,{href:"https://aws.amazon.com/appflow/pricing/",children:"AppFlow"}),", Amazon ",(0,t.jsx)(n.a,{href:"https://aws.amazon.com/s3/pricing",children:"S3"}),", ",(0,t.jsx)(n.a,{href:"https://www.teradata.com/Cloud/AWS/Do-it-Yourself/Pricing",children:"Vantage"})," and ",(0,t.jsx)(n.a,{href:"https://aws.amazon.com/ec2/pricing/",children:"VM"}),") for the resources used, follow these steps:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"AppFlow:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:'Delete the "Connections" you created for the flow'}),"\n",(0,t.jsx)(n.li,{children:"Delete the flows"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Amazon S3 bucket and file:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Go to the Amazon S3 buckets where the Vantage data file is stored, and delete the file(s)"}),"\n",(0,t.jsx)(n.li,{children:"If there are no need to keep the buckets, delete the buckets"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Teradata Vantage Instance"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Stop/Terminate the instance if no longer needed"}),"\n"]}),"\n"]}),"\n"]}),"\n","\n",(0,t.jsx)(o.Ay,{})]})}function A(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},27020:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image10-8dc08a10cb914ca564c2a4028289b348.png"},79285:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image11-65cfe582fd32a80d7d6e6f22f9393f6b.png"},77182:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image12-43039f2f81fd09bdda5ff9d426c2b31b.png"},46023:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image13-371eaff53cc6a4f50dbe2ff25dfa9f09.png"},66408:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image14-e73c7d0b7b20d4e960cfd3a83adafbf1.png"},60273:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image15-57e06f4dea27a3e9e6c104ae39dd7a3b.png"},39162:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image16-8124c9122124b3c4abed52ddbbb48b1f.png"},3267:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image17-ced8d9cb3d16389ac552ed8061d9c020.png"},43044:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image18-7522ea2f40ca0c23e3fe46d850fd0932.png"},96941:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image19-427b8a3d1ec3bd36278f3dcac4a7caa7.png"},20933:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image2-b47a0ed65dfca57048fd3c6238ffaf21.png"},97441:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image20-5d5ccdd2c8319f810cc857a008dbd45b.png"},76312:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image21-c715df29cb4e70732cdd2e1eb06b9c60.png"},71923:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image22-76da6ff6e013c92ce7f7ace549d4284d.png"},40010:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image23-b73b5eb9ddf4614674bf15f50808cfc2.png"},26789:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image24-3487b505e7af7e90be4d1698089e203b.png"},74524:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image25-357cf6d2bd7aa644706ae5650761a2b5.png"},98455:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image26-2df3b39c66f725bd3ab9e983278f7775.png"},98958:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image27-6225cae11bf47ccf3a7311dd61bc6a20.png"},88345:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image28-41b92a63c44f55b9ce7f30044e9d53e2.png"},82096:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image29-3f9a5c1b0a5f765a779f1285eec28a10.png"},68668:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image3-56ffd6dec2411079e67430b824d619ae.png"},6630:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image30-cdbaeb47f8c9855cac28b3913e206663.png"},66067:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image4-4c410d1a03d21c4079003ed06980a6e9.png"},31058:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image41-4bde49fd0f2200c9d955a81260169fe4.png"},96201:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image42-b0d1d91a358ba23a82f85658189e19f7.png"},41376:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image43-b48500cc6b0520919426cb25a36269f7.png"},31:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image44-4751dd27ebeac235e68b3e25c60b3a14.png"},21942:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image45-068a1e3d8a5c4e8aec12297189086c29.png"},12621:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image46-89b92c5e8535f1542e7e9002b4ee09ba.png"},50506:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image5-3316c309ababf5d52ff195c680e6f090.png"},91585:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image6-b762befaa19a5dd1747b999da65506a1.png"},70456:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image7-fdc8882ca91b125b4fbfb848f860eabd.png"},45263:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image8-17d09264c7c862bae2461e53a1c59305.png"},80070:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/image9-ef5e6a59dc52c9d14a321b31faa33b32.png"},28453:(e,n,a)=>{a.d(n,{R:()=>o,x:()=>r});var t=a(96540);const s={},i=t.createContext(s);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);