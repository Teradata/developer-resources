"use strict";(self.webpackChunkai_unlimited_docs=self.webpackChunkai_unlimited_docs||[]).push([[1234],{32442:(e,n,t)=>{t.d(n,{Ay:()=>r,RM:()=>s});var a=t(74848),o=t(28453);const s=[];function i(e){const n={a:"a",admonition:"admonition",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",...(0,o.R)(),...e.components};return(0,a.jsxs)(n.admonition,{type:"note",children:[(0,a.jsx)(n.mdxAdmonitionTitle,{}),(0,a.jsxs)(n.p,{children:["Vantage \u306e\u30c6\u30b9\u30c8\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u5fc5\u8981\u306a\u5834\u5408\u306f\u3001 ",(0,a.jsx)(n.a,{href:"https://clearscape.teradata.com/sign-in?utm_source=dev_portal&utm_medium=quickstart_tutorial&utm_campaign=quickstarts",children:"https://clearscape.teradata.com"})," \u3067\u7121\u6599\u3067\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3067\u304d\u307e\u3059"]})]})}function r(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(i,{...e})}):i(e)}},79257:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>d,toc:()=>c});var a=t(74848),o=t(28453),s=t(32442);const i={sidebar_position:8,author:"Tayyaba Batool",email:"tayyaba.batool@teradata.com",page_last_update:"2024\u5e743\u670819\u65e5",description:"\u30e2\u30c7\u30eb\u30d5\u30a1\u30af\u30c8\u30ea\u30fc\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb - ClearScape Analytics ModelOps \u3092\u4f7f\u7528\u3057\u305f Airflow \u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306e\u5b9f\u884c",keywords:["modelfactory","modelops","byom","python","clearscape analytics","teradata","data warehouses","teradata","vantage","cloud data platform","machine learning","artificial intelligence","business intelligence","enterprise analytics"]},r="ModelOps \u3067 Airflow \u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u5b9f\u884c\u3059\u308b - Model Factory \u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3 \u30a2\u30af\u30bb\u30e9\u30ec\u30fc\u30bf",d={id:"analyze-data/execute-airflow-workflows-with-clearscape-analytics-modelops-model-factory-solution",title:"ModelOps \u3067 Airflow \u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u5b9f\u884c\u3059\u308b - Model Factory \u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3 \u30a2\u30af\u30bb\u30e9\u30ec\u30fc\u30bf",description:"\u30e2\u30c7\u30eb\u30d5\u30a1\u30af\u30c8\u30ea\u30fc\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb - ClearScape Analytics ModelOps \u3092\u4f7f\u7528\u3057\u305f Airflow \u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306e\u5b9f\u884c",source:"@site/i18n/ja/docusaurus-plugin-content-docs-quickstarts/current/analyze-data/execute-airflow-workflows-with-clearscape-analytics-modelops-model-factory-solution.md",sourceDirName:"analyze-data",slug:"/analyze-data/execute-airflow-workflows-with-clearscape-analytics-modelops-model-factory-solution",permalink:"/pr-preview/pr-150/ja/quickstarts/analyze-data/execute-airflow-workflows-with-clearscape-analytics-modelops-model-factory-solution",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8,author:"Tayyaba Batool",email:"tayyaba.batool@teradata.com",page_last_update:"2024\u5e743\u670819\u65e5",description:"\u30e2\u30c7\u30eb\u30d5\u30a1\u30af\u30c8\u30ea\u30fc\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb - ClearScape Analytics ModelOps \u3092\u4f7f\u7528\u3057\u305f Airflow \u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306e\u5b9f\u884c",keywords:["modelfactory","modelops","byom","python","clearscape analytics","teradata","data warehouses","teradata","vantage","cloud data platform","machine learning","artificial intelligence","business intelligence","enterprise analytics"]},sidebar:"tutorialSidebar",previous:{title:"ModelOps - \u521d\u3081\u3066\u306eGIT\u30e2\u30c7\u30eb\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\u3068\u30c7\u30d7\u30ed\u30a4",permalink:"/pr-preview/pr-150/ja/quickstarts/analyze-data/deploy-and-monitor-machine-learning-models-with-teradata-modelops-and-git"},next:{title:"Vantage\u304b\u3089SageMaker\u306eAPI\u3092\u5b9f\u884c\u3059\u308b\u65b9\u6cd5",permalink:"/pr-preview/pr-150/ja/quickstarts/analyze-data/sagemaker-with-teradata-vantage"}},l={},c=[{value:"\u6982\u8981",id:"\u6982\u8981",level:2},{value:"\u524d\u63d0\u6761\u4ef6",id:"\u524d\u63d0\u6761\u4ef6",level:2},...s.RM,{value:"Visual Studio Code \u306e\u8a2d\u5b9a\u3068 docker-compose \u3067\u306e Airflow \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb",id:"visual-studio-code-\u306e\u8a2d\u5b9a\u3068-docker-compose-\u3067\u306e-airflow-\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb",level:2},{value:"\u30e2\u30c7\u30eb\u30d5\u30a1\u30af\u30c8\u30ea\u30fc\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30af\u30bb\u30e9\u30ec\u30fc\u30bf\u306e\u69cb\u6210",id:"\u30e2\u30c7\u30eb\u30d5\u30a1\u30af\u30c8\u30ea\u30fc\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30af\u30bb\u30e9\u30ec\u30fc\u30bf\u306e\u69cb\u6210",level:2},{value:"\u5b8c\u5168\u306a ModelOps \u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u3092\u542b\u3080 Airflow DAG \u3092\u4f5c\u6210\u3059\u308b",id:"\u5b8c\u5168\u306a-modelops-\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u3092\u542b\u3080-airflow-dag-\u3092\u4f5c\u6210\u3059\u308b",level:2},{value:"Docker Compose \u3067 Airflow \u3092\u521d\u671f\u5316\u3059\u308b",id:"docker-compose-\u3067-airflow-\u3092\u521d\u671f\u5316\u3059\u308b",level:2},{value:"Airflow\u30c7\u30e2\u74b0\u5883\u3092\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u3059\u308b",id:"airflow\u30c7\u30e2\u74b0\u5883\u3092\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u3059\u308b",level:2},{value:"\u30e2\u30c7\u30eb\u30d5\u30a1\u30af\u30c8\u30ea\u30fc\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30af\u30bb\u30e9\u30ec\u30fc\u30bf\u3067Airflow\u3092\u8d77\u52d5\u3059\u308b",id:"\u30e2\u30c7\u30eb\u30d5\u30a1\u30af\u30c8\u30ea\u30fc\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30af\u30bb\u30e9\u30ec\u30fc\u30bf\u3067airflow\u3092\u8d77\u52d5\u3059\u308b",level:2},{value:"ModelOps \u3067\u30e2\u30c7\u30eb \u30d5\u30a1\u30af\u30c8\u30ea\u30fc \u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u306e Airflow DAG \u3092\u5b9f\u884c\u3059\u308b",id:"modelops-\u3067\u30e2\u30c7\u30eb-\u30d5\u30a1\u30af\u30c8\u30ea\u30fc-\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u306e-airflow-dag-\u3092\u5b9f\u884c\u3059\u308b",level:2},{value:"\u307e\u3068\u3081",id:"\u307e\u3068\u3081",level:2},{value:"\u3055\u3089\u306b\u8a73\u3057\u304f",id:"\u3055\u3089\u306b\u8a73\u3057\u304f",level:2}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components},{Details:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"modelops-\u3067-airflow-\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u5b9f\u884c\u3059\u308b---model-factory-\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3-\u30a2\u30af\u30bb\u30e9\u30ec\u30fc\u30bf",children:"ModelOps \u3067 Airflow \u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u5b9f\u884c\u3059\u308b - Model Factory \u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3 \u30a2\u30af\u30bb\u30e9\u30ec\u30fc\u30bf"}),"\n",(0,a.jsx)(n.h2,{id:"\u6982\u8981",children:"\u6982\u8981"}),"\n",(0,a.jsxs)(n.p,{children:["[ ",(0,a.jsx)(n.strong,{children:"ClearScape Analytics"})," \u306e ",(0,a.jsx)(n.strong,{children:"\u30e2\u30c7\u30eb\u30d5\u30a1\u30af\u30c8\u30ea\u30fc\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30af\u30bb\u30e9\u30ec\u30fc\u30bf"})," \u306e\u76ee\u7684\u306f ",(0,a.jsx)(n.strong,{children:"1\u56de\u306e\u4f5c\u696d\u3067\u30d3\u30b8\u30cd\u30b9\u30c9\u30e1\u30a4\u30f3\u306e\u4f55\u767e\u3082\u306e\u30e2\u30c7\u30eb\u3092\u4f5c\u6210"}),"\u3001\u3092\u904b\u7528\u5316\u3059\u308b\u3053\u3068\u3067\u3001 ",(0,a.jsx)(n.strong,{children:"\u6c34\u5e73\u30b9\u30b1\u30fc\u30eb"})," \u306e\u7d44\u7e54\u5185\u3067\u6a5f\u68b0\u5b66\u7fd2\u30e2\u30c7\u30eb\u306e\u958b\u767a\u3001\u30c7\u30d7\u30ed\u30a4\u3001\u7ba1\u7406\u306e\u30a8\u30f3\u30c9\u30c4\u30fc\u30a8\u30f3\u30c9\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u5408\u7406\u5316\u3057\u3001\u52a0\u901f\u3059\u308b\u3053\u3068\u3067\u3059\u3002\u3053\u308c\u306f\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u5185\u5206\u6790\u306e\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u3068\u3001H2O \u3084 Dataiku \u306a\u3069\u306e\u30d1\u30fc\u30c8\u30ca\u30fc \u30e2\u30c7\u30eb\u5f62\u5f0f\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u30aa\u30fc\u30d7\u30f3\u6027\u3092\u6d3b\u7528\u3057\u307e\u3059\u3002\u3053\u306e\u72ec\u81ea\u306e\u7d44\u307f\u5408\u308f\u305b\u306b\u3088\u308a\u3001\u30a8\u30f3\u30bf\u30fc\u30d7\u30e9\u30a4\u30ba\u74b0\u5883\u306b\u304a\u3051\u308b\u6a5f\u68b0\u5b66\u7fd2\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u306e\u3055\u307e\u3056\u307e\u306a\u6bb5\u968e\u3067\u52b9\u7387\u3001\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u3001\u4e00\u8cab\u6027\u304c\u5411\u4e0a\u3057\u307e\u3059\u3002"]}),"\n",(0,a.jsxs)(n.p,{children:["\u30e2\u30c7\u30eb \u30d5\u30a1\u30af\u30c8\u30ea\u30fc \u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3 \u30a2\u30af\u30bb\u30e9\u30ec\u30fc\u30bf\u306f\u3001\u30d9\u30b9\u30c8 \u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u3001\u81ea\u52d5\u5316\u3001\u6a19\u6e96\u5316\u3055\u308c\u305f\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u7d44\u307f\u8fbc\u3080\u3053\u3068\u3067\u3001\u30c1\u30fc\u30e0\u304c\u4f7f\u7528\u3059\u308b\u30c7\u30fc\u30bf\u3092\u8fc5\u901f\u306b\u9078\u629e\u3057\u3001\u5fc5\u8981\u306a\u30e2\u30c7\u30eb\u3092\u69cb\u6210\u3057\u3001\u518d\u73fe\u6027\u3092\u78ba\u4fdd\u3057\u3001 ",(0,a.jsx)(n.strong,{children:"\u7121\u5236\u9650"})," \u500b\u306e\u30e2\u30c7\u30eb\u3092\u30b7\u30fc\u30e0\u30ec\u30b9\u306b\u672c\u756a\u74b0\u5883\u306b\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u6700\u7d42\u7684\u306b\u306f\u3001\u6a5f\u68b0\u5b66\u7fd2\u30a4\u30cb\u30b7\u30a2\u30c1\u30d6\u306e\u4fa1\u5024\u5b9f\u73fe\u307e\u3067\u306e\u6642\u9593\u3092\u77ed\u7e2e\u3057\u3001\u5927\u898f\u6a21\u306a\u30e2\u30c7\u30eb\u306e\u69cb\u7bc9\u3068\u30c7\u30d7\u30ed\u30a4\u306b\u5bfe\u3059\u308b\u3088\u308a\u69cb\u9020\u5316\u3055\u308c\u305f\u52b9\u7387\u7684\u306a\u30a2\u30d7\u30ed\u30fc\u30c1\u3092\u4fc3\u9032\u3059\u308b\u3053\u3068\u3092\u76ee\u6307\u3057\u3066\u3044\u307e\u3059\u3002\u81ea\u52d5\u5316\u3055\u308c\u305f\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306e\u56f3\u3092\u4ee5\u4e0b\u306b\u793a\u3057\u307e\u3059\u3002"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"\u30ef\u30fc\u30af\u30d5\u30ed\u30fc",src:t(2794).A+"",width:"1752",height:"736"})}),"\n",(0,a.jsx)(n.p,{children:"Airflow \u3068 ClearScape Analytics ModelOps \u3092\u4f7f\u7528\u3057\u3066 Model Factory Solution Accelerator \u3092\u5b9f\u88c5\u3059\u308b\u624b\u9806\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002Apache Airflow \u306f\u3001\u30c7\u30fc\u30bf \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u307e\u305f\u306f\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3068\u30aa\u30fc\u30b1\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306f\u3001ModelOps \u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u3092\u81ea\u52d5\u5316\u3059\u308b\u305f\u3081\u306b\u5b9f\u884c\u3055\u308c\u308b Airflow DAG (\u6709\u5411\u975e\u5de1\u56de\u30b0\u30e9\u30d5) \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002"}),"\n",(0,a.jsx)(n.h2,{id:"\u524d\u63d0\u6761\u4ef6",children:"\u524d\u63d0\u6761\u4ef6"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306f\u3001 ",(0,a.jsx)(n.strong,{children:"Visual Studio code"})," IDE \u3092\u4f7f\u7528\u3057\u3066\u30ed\u30fc\u30ab\u30eb \u30de\u30b7\u30f3\u306b\u5b9f\u88c5\u3057\u307e\u3059\u3002"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["\u30b7\u30a7\u30eb \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u306b\u306f\u3001\u6b21\u306e\u30ea\u30f3\u30af\u3092\u4f7f\u7528\u3057\u3066 VS \u30b3\u30fc\u30c9\u62e1\u5f35\u6a5f\u80fd ",(0,a.jsx)(n.strong,{children:"\u300c\u30ea\u30e2\u30fc\u30c8\u958b\u767a\u300d"})," \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u62e1\u5f35\u6a5f\u80fd\u30d1\u30c3\u30af\u306b\u306f\u3001\u30ea\u30e2\u30fc\u30c8 - SSH \u62e1\u5f35\u6a5f\u80fd\u3068 Dev Containers \u62e1\u5f35\u6a5f\u80fd\u306b\u52a0\u3048\u3066 WSL \u62e1\u5f35\u6a5f\u80fd\u304c\u542b\u307e\u308c\u3066\u304a\u308a\u3001\u30b3\u30f3\u30c6\u30ca\u5185\u3001\u30ea\u30e2\u30fc\u30c8 \u30de\u30b7\u30f3\u4e0a\u3001\u307e\u305f\u306f WSL \u5185\u306e\u4efb\u610f\u306e\u30d5\u30a9\u30eb\u30c0\u3092\u958b\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n",(0,a.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.vscode-remote-extensionpack",children:"VS\u30b3\u30fc\u30c9\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9"}),"."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Teradata Vantage\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3068ClearScape Analytics\uff08ModelOps\u3092\u542b\u3080\uff09\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3002"}),"\n"]}),"\n",(0,a.jsx)(s.Ay,{}),"\n",(0,a.jsx)(n.h2,{id:"visual-studio-code-\u306e\u8a2d\u5b9a\u3068-docker-compose-\u3067\u306e-airflow-\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb",children:"Visual Studio Code \u306e\u8a2d\u5b9a\u3068 docker-compose \u3067\u306e Airflow \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Visual Studio\u30b3\u30fc\u30c9\u3092\u958b\u304d\u3001\u30ea\u30e2\u30fc\u30c8\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u958b\u304f\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u9078\u629e\u3057\u307e\u3059\u3002\u6b21\u306b\u3001WSL-Ubuntu\u306b\u63a5\u7d9a\u3092\u9078\u629e\u3057\u307e\u3059\u3002"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"\u30d5\u30a1\u30a4\u30eb > \u30d5\u30a9\u30eb\u30c0\u3092\u958b\u304f\u3092\u9078\u629e\u3057\u307e\u3059\u3002\u6b21\u306b\u3001\u76ee\u7684\u306e\u30d5\u30a9\u30eb\u30c0\u3092\u9078\u629e\u3059\u308b\u304b\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u65b0\u3057\u3044\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u6210\u3057\u307e\u3059: mkdir [folder_name]"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"AIRFLOW_HOME \u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002Airflow \u306b\u306f\u30db\u30fc\u30e0 \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u5fc5\u8981\u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f ~/airflow \u3092\u4f7f\u7528\u3057\u307e\u3059\u304c\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u5225\u306e\u5834\u6240\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002AIRFLOW_HOME \u74b0\u5883\u5909\u6570\u306f\u3001Airflow \u306b\u5fc5\u8981\u306a\u5834\u6240\u3092\u901a\u77e5\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"AIRFLOW_HOME=./[folder_name]\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"PyPI \u30ea\u30dd\u30b8\u30c8\u30ea\u304b\u3089 apache-airflow \u5b89\u5b9a\u30d0\u30fc\u30b8\u30e7\u30f3 2.8.2 \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'    AIRFLOW_VERSION=2.8.2\n\n    PYTHON_VERSION="$(python3 --version | cut -d " " -f 2 | cut -d "." -f 1-2)"\n\n    CONSTRAINT_URL="https://raw.githubusercontent.com/apache/airflow/constraints-${AIRFLOW_VERSION}/constraints-${PYTHON_VERSION}.txt"\n\n    pip install "apache-airflow==${AIRFLOW_VERSION}" --constraint "${CONSTRAINT_URL}" --default-timeout=100\n'})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Airflow Teradata\u30d7\u30ed\u30d0\u30a4\u30c0\u306e\u5b89\u5b9a\u30d0\u30fc\u30b8\u30e7\u30f3\u3092PyPI\u30ea\u30dd\u30b8\u30c8\u30ea\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'pip install "apache-airflow-providers-teradata" --default-timeout=100\n'})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"Docker \u30b3\u30f3\u30c6\u30ca\u3092\u4f7f\u7528\u3057\u3066 Airflow \u3092\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u3001Docker Desktop \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002Docker \u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u3066 docker \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"docker --version\n"})}),"\n",(0,a.jsx)(n.p,{children:"docker compose\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002Docker Compose\u306f\u3001\u30de\u30eb\u30c1\u30b3\u30f3\u30c6\u30ca\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9a\u7fa9\u304a\u3088\u3073\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3067\u3059\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"docker-compose --version\n"})}),"\n",(0,a.jsx)(n.p,{children:"Docker Compose \u306b Airflow \u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u306b\u306f\u3001\u3053\u306e curl \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u3066 docker-compose.yaml \u3092\u53d6\u5f97\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:', id="Fetch docker-compose yaml", role="content-editable emits-gtm-events"',children:"    curl -LfO 'https://airflow.apache.org/docs/apache-airflow/2.8.2/docker-compose.yaml'\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u3001\u5f8c\u3067\u4f7f\u7528\u3059\u308b\u305f\u3081\u306b\u3053\u308c\u3089\u306e\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:', id="Create Airflow folders", role="content-editable emits-gtm-events"',children:"mkdir -p ./dags ./logs ./plugins ./config\n"})}),"\n",(0,a.jsx)(n.h2,{id:"\u30e2\u30c7\u30eb\u30d5\u30a1\u30af\u30c8\u30ea\u30fc\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30af\u30bb\u30e9\u30ec\u30fc\u30bf\u306e\u69cb\u6210",children:"\u30e2\u30c7\u30eb\u30d5\u30a1\u30af\u30c8\u30ea\u30fc\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30af\u30bb\u30e9\u30ec\u30fc\u30bf\u306e\u69cb\u6210"}),"\n",(0,a.jsx)(n.p,{children:"config \u30d5\u30a9\u30eb\u30c0\u5185\u306b config \u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3059\u308b\u30e2\u30c7\u30eb\u306b\u5fdc\u3058\u3066\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u5bfe\u5fdc\u3059\u308b\u5024\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002"}),"\n",(0,a.jsxs)(i,{children:[(0,a.jsx)("summary",{children:"\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068Python\u30b3\u30fc\u30c9\u304c\u8868\u793a\u3055\u308c\u307e\u3059"}),(0,a.jsx)("pre",{children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'from configparser import ConfigParser\nimport os\n\nconfig = ConfigParser()\n\nconfig[\'MAIN\'] = {\n    "projectId": "23e1df4b-b630-47a1-ab80-7ad5385fcd8d",\n    "bearerToken": os.environ[\'BEARER_TOKEN\'],\n    "trainDatasetId": "ba39e766-2fdf-426f-ba5c-4ca3e90955fc",\n    "evaluateDatasetId": "74489d62-2af5-4402-b264-715e151a420a",\n    "datasetConnectionId" : "151abf05-1914-4d38-a90d-272d850f212c",\n    "datasetTemplateId": "d8a35d98-21ce-47d0-b9f2-00d355777de1"\n}\n\nconfig[\'HYPERPARAMETERS\'] = {\n    "eta": 0.2,\n    "max_depth": 6\n}\n\nconfig[\'RESOURCES\'] = {\n    "memory": "500m",\n    "cpu": "0.5"\n}\n\nconfig[\'MODEL\'] = {\n    "modelId": "f937b5d8-02c6-5150-80c7-1e4ff07fea31",\n    "approvalComments": "Approving this model!",\n    "cron": "@once",\n    "engineType": "DOCKER_BATCH",\n    "engine": "python-batch",\n    "dockerImage": "artifacts.td.teradata.com/tdproduct-docker-snapshot/avmo/aoa-python-base:3.9.13-1"\n}\n\n\nwith open(\'./config/modelOpsConfig.ini\', \'w\') as f:\n    config.write(f)\n'})})})]}),"\n",(0,a.jsx)(n.p,{children:"\u6b21\u306b\u3001ModelOps \u30e6\u30fc\u30b6\u30fc \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9 (\u5de6\u5074\u306e\u30e1\u30cb\u30e5\u30fc -> \u30a2\u30ab\u30a6\u30f3\u30c8 -> \u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u8a73\u7d30) \u304b\u3089 Bearer \u30c8\u30fc\u30af\u30f3\u3092\u30b3\u30d4\u30fc\u3057\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u3053\u3053\u3067\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u8a2d\u5b9a\u3057\u307e\u3059\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:', id="Bearer token", role="content-editable emits-gtm-events"',children:"export BEARER_TOKEN='your_token_here'\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u3053\u308c\u3067\u3001\u4ee5\u524d\u306b\u4f5c\u6210\u3057\u305f\u69cb\u6210\u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001DAG \u4f5c\u6210\u624b\u9806\u3067\u4f7f\u7528\u3055\u308c\u308b\u3059\u3079\u3066\u306e\u5fc5\u8981\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u542b\u3080\u65b0\u3057\u3044 ini \u30d5\u30a1\u30a4\u30eb\u304c config \u30d5\u30a9\u30eb\u30c0\u5185\u306b\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",metastring:', id="Create config ini", role="content-editable emits-gtm-events"',children:"python3 createConfig.py\n"})}),"\n",(0,a.jsx)(n.h2,{id:"\u5b8c\u5168\u306a-modelops-\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u3092\u542b\u3080-airflow-dag-\u3092\u4f5c\u6210\u3059\u308b",children:"\u5b8c\u5168\u306a ModelOps \u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u3092\u542b\u3080 Airflow DAG \u3092\u4f5c\u6210\u3059\u308b"}),"\n",(0,a.jsx)(n.p,{children:"\u3053\u308c\u3067\u3001\u6b21\u306e Python \u30b3\u30fc\u30c9\u3092\u4f7f\u7528\u3057\u3066 DAG \u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\u3053\u306e Python \u30b3\u30fc\u30c9 \u30d5\u30a1\u30a4\u30eb\u3092 dags \u30d5\u30a9\u30eb\u30c0\u5185\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\u3053\u306e DAG \u306b\u306f\u3001ModelOps \u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u306e 5 \u3064\u306e\u30bf\u30b9\u30af (\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3001\u8a55\u4fa1\u3001\u627f\u8a8d\u3001\u30c7\u30d7\u30ed\u30a4\u3001\u304a\u3088\u3073\u5ec3\u6b62) \u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002"}),"\n",(0,a.jsxs)(i,{children:[(0,a.jsx)("summary",{children:"\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068Python\u30b3\u30fc\u30c9\u304c\u8868\u793a\u3055\u308c\u307e\u3059"}),(0,a.jsx)("pre",{children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"import base64\nfrom datetime import datetime, timedelta, date\nimport json\nimport os\nimport time\n\nfrom airflow import DAG\nfrom airflow.operators.python import PythonOperator\n\nimport requests\n\nfrom configparser import ConfigParser\n\n# Read from Config file\nconfig = ConfigParser()\nconfig.read('config/modelOpsConfig.ini')\n\nconfig_main = config[\"MAIN\"]\nconfig_hyper_params = config[\"HYPERPARAMETERS\"]\nconfig_resources = config[\"RESOURCES\"]\nconfig_model = config[\"MODEL\"]\n\n# Default args for DAG\ndefault_args = {\n    'owner': 'Tayyaba',\n    'retries': 5,\n    'retry_delay': timedelta(minutes=2)\n}\n\ndef get_job_status(job_id):\n\n    # Use the fetched Job ID to check Job Status\n    headers_for_status = {\n    'AOA-PROJECT-ID': config_main['projectid'],\n    'Authorization': 'Bearer ' + config_main['bearertoken'],\n    }\n\n    status_response = requests.get('https://airflow-u9usja4twtauvt3s.env.clearscape.teradata.com:8443/modelops/core/api/jobs/' + job_id + '?projection=expandJob', headers=headers_for_status)\n    status_json = status_response.json()\n    job_status = status_json.get('status')\n    return job_status\n\n\ndef train_model(ti):\n\n    headers = {\n    'AOA-Project-ID': config_main['projectid'],\n    'Accept': 'application/json, text/plain, */*',\n    'Accept-Language': 'en-US,en;q=0.9',\n    'Authorization': 'Bearer ' + config_main['bearertoken'],\n    'Content-Type': 'application/json',\n    }\n\n    json_data = {\n        'datasetId': config_main['trainDatasetId'],\n        'datasetConnectionId': config_main['datasetConnectionId'],\n        'modelConfigurationOverrides': {\n            'hyperParameters': {\n                'eta': config_hyper_params['eta'],\n                'max_depth': config_hyper_params['max_depth'],\n            },\n        },\n        'automationOverrides': {\n            'resources': {\n                'memory': config_resources['memory'],\n                'cpu': config_resources['cpu'],\n            },\n            'dockerImage':  config_model['dockerImage'],\n        },\n    }\n\n    \n    response = requests.post('https://airflow-u9usja4twtauvt3s.env.clearscape.teradata.com:8443/modelops/core/api/models/' + config_model['modelid'] + '/train', headers=headers, json=json_data)\n    \n    json_data = response.json()\n\n    # Get the Training Job ID\n    job_id = json_data.get('id')\n    ti.xcom_push(key='train_job_id', value=job_id)\n\n    job_status = get_job_status(job_id)\n    print(\"Started - Training Job - Status: \", job_status)\n\n    while job_status != \"COMPLETED\":\n        if job_status==\"ERROR\":\n            print(\"The training job is terminated due to an Error\")\n            ti.xcom_push(key='trained_model_id', value='NONE') # Setting the Trained Model Id to None here and check in next step (Evaluate)\n            break\n        elif job_status==\"CANCELLED\":\n            ti.xcom_push(key='trained_model_id', value='NONE') \n            print(\"The training job is Cancelled !!\")\n            break\n        print(\"Job is not completed yet. Current status\", job_status)\n        time.sleep(5) #wait 5s\n        job_status = get_job_status(job_id)\n\n    # Checking Job status at the end to push the correct trained_model_id\n    if(job_status == \"COMPLETED\"):\n        train_model_id = json_data['metadata']['trainedModel']['id']\n        ti.xcom_push(key='trained_model_id', value=train_model_id)\n        print('Model Trained Successfully! Job ID is : ', job_id, 'Trained Model Id : ', train_model_id, ' Status : ', job_status)\n    else:\n        ti.xcom_push(key='trained_model_id', value='NONE')\n        print(\"Training Job is terminated !!\")\n\n\ndef evaluate_model(ti):\n\n    trained_model_id = ti.xcom_pull(task_ids = 'task_train_model', key = 'trained_model_id')\n\n    headers = {\n    'AOA-Project-ID': config_main['projectid'],\n    'Accept': 'application/json, text/plain, */*',\n    'Accept-Language': 'en-US,en;q=0.9',\n    'Authorization': 'Bearer ' + config_main['bearertoken'],\n    'Content-Type': 'application/json',\n    }\n\n    json_data = {\n        'datasetId': config_main['evaluatedatasetid'],\n        'datasetConnectionId': config_main['datasetConnectionId'],\n        'modelConfigurationOverrides': {\n            'hyperParameters': {\n                'eta': config_hyper_params['eta'],\n                'max_depth': config_hyper_params['max_depth'],\n            },\n        },\n        'automationOverrides': {\n            'resources': {\n                'memory': config_resources['memory'],\n                'cpu': config_resources['cpu'],\n            },\n            'dockerImage':  config_model['dockerImage'],\n        },\n    }\n\n    if trained_model_id == 'NONE':\n        ti.xcom_push(key='evaluated_model_status', value='FALIED')\n        print(\"Evaluation cannot be done as the Training Job was terminated !!\") \n    else:\n        response = requests.post('https://airflow-u9usja4twtauvt3s.env.clearscape.teradata.com:8443/modelops/core/api/trainedModels/' + trained_model_id + '/evaluate', headers=headers, json=json_data)\n        json_data = response.json()\n\n        # Get the Evaluation Job ID\n        eval_job_id = json_data.get('id')\n        ti.xcom_push(key='evaluate_job_id', value=eval_job_id)\n\n        job_status = get_job_status(eval_job_id)\n        print(\"Started - Job - Status: \", job_status)\n\n        while job_status != \"COMPLETED\":\n            if job_status==\"ERROR\":\n                print(\"The evaluation job is terminated due to an Error\")\n                # Set the Trained Model Id to None here and check in next step (Evaluate)\n                break\n            elif job_status==\"CANCELLED\":\n                print(\"The evaluation job is Cancelled !!\")\n                break\n            print(\"Job is not completed yet. Current status\", job_status)\n            time.sleep(5) # wait 5s\n            job_status = get_job_status(eval_job_id)\n\n        # Checking Job status at the end to push the correct evaluate_job_id\n        if(job_status == \"COMPLETED\"):\n            ti.xcom_push(key='evaluated_model_status', value='EVALUATED')\n            print('Model Evaluated Successfully! Job ID is : ', eval_job_id, ' Status : ', job_status)\n        else:\n            ti.xcom_push(key='evaluated_model_status', value='FAILED')\n            print(\"Evaluation Job is terminated !!\")\n\n\ndef approve_model(ti):\n\n    evaluated_model_status = ti.xcom_pull(task_ids = 'task_evaluate_model', key = 'evaluated_model_status')\n\n    if evaluated_model_status == 'FAILED':\n        ti.xcom_push(key='approve_model_status', value='FALIED')\n        print(\"Approval cannot be done as the Evaluation was failed !!\") \n    else:\n        trained_model_id = ti.xcom_pull(task_ids = 'task_train_model', key = 'trained_model_id') \n\n        headers = {\n        'AOA-Project-ID': config_main['projectid'],\n        'Accept': 'application/json, text/plain, */*',\n        'Accept-Language': 'en-US,en;q=0.9',\n        'Authorization': 'Bearer ' + config_main['bearertoken'],\n        'Content-Type': 'application/json',\n        }\n\n        json_data = {\n            \"comments\": (base64.b64encode(config_model['approvalComments'].encode()).decode())\n        }\n\n        response = requests.post('https://airflow-u9usja4twtauvt3s.env.clearscape.teradata.com:8443/modelops/core/api/trainedModels/' + trained_model_id + '/approve' , headers=headers, json=json_data)\n        response_json = response.json()\n        approval_status = response_json['status']\n        if(approval_status == 'APPROVED'):\n            ti.xcom_push(key='approve_model_status', value='EVALUATED')\n            print('Model Approved Successfully! Status: ', approval_status)\n        else:\n            ti.xcom_push(key='approve_model_status', value='FAILED')\n            print('Model not approved! Status: ', approval_status)\n\n\ndef deploy_model(ti):\n\n    approve_model_status = ti.xcom_pull(task_ids = 'task_approve_model', key = 'approve_model_status')\n\n    headers = {\n        'AOA-Project-ID': config_main['projectid'],\n        'Accept': 'application/json, text/plain, */*',\n        'Accept-Language': 'en-US,en;q=0.9',\n        'Authorization': 'Bearer ' + config_main['bearertoken'],\n        'Content-Type': 'application/json',\n    }\n\n\n    json_data = {\n        'engineType': config_model['engineType'],\n        'engineTypeConfig': {\n            'dockerImage':  config_model['dockerImage'],\n            'engine': \"python-batch\",\n            'resources': {\n                'memory': config_resources['memory'],\n                'cpu': config_resources['cpu'],\n            }\n        },\n        'language':\"python\",\n        'datasetConnectionId': config_main['datasetConnectionId'],\n        'datasetTemplateId': config_main['datasetTemplateId'],\n        'cron': config_model['cron'],\n        'publishOnly': \"false\",\n        'args':{}\n    }\n\n    if approve_model_status == 'FAILED':\n        ti.xcom_push(key='deploy_model_status', value='FALIED')\n        print(\"Deployment cannot be done as the model is not approved !!\") \n    else:\n        trained_model_id = ti.xcom_pull(task_ids = 'task_train_model', key = 'trained_model_id') \n\n        response = requests.post('https://airflow-u9usja4twtauvt3s.env.clearscape.teradata.com:8443/modelops/core/api/trainedModels/' + trained_model_id + '/deploy', headers=headers, json=json_data)\n        json_data = response.json()\n\n        # Get the Deployment Job ID\n        deploy_job_id = json_data.get('id')\n        ti.xcom_push(key='deploy_job_id', value=deploy_job_id)\n\n        # deployed_model_id = json_data['metadata']['deployedModel']['id']\n\n        job_status = get_job_status(deploy_job_id)\n        print(\"Started - Deployment Job - Status: \", job_status)\n\n        while job_status != \"COMPLETED\":\n            if job_status==\"ERROR\":\n                ti.xcom_push(key='deploy_model_status', value='FAILED')\n                print(\"The deployment job is terminated due to an Error\")\n                break\n            elif job_status==\"CANCELLED\":\n                ti.xcom_push(key='deploy_model_status', value='FAILED')\n                print(\"The deployment job is Cancelled !!\")\n                break\n            print(\"Job is not completed yet. Current status\", job_status)\n            time.sleep(5) # wait 5s\n    job_status = get_job_status(deploy_job_id)\n\n    # Checking Job status at the end to push the correct deploy_model_status\n    if(job_status == \"COMPLETED\"):\n        ti.xcom_push(key='deploy_model_status', value='DEPLOYED')\n        print('Model Deployed Successfully! Job ID is : ', deploy_job_id, ' Status : ', job_status)\n    else:\n        ti.xcom_push(key='deploy_model_status', value='FAILED')\n        print(\"Deployment Job is terminated !!\")\n\n\n\ndef retire_model(ti):\n\n    deployed_model_status = ti.xcom_pull(task_ids = 'task_deploy_model', key = 'deploy_model_status')\n\n    if deployed_model_status == 'FAILED':\n        ti.xcom_push(key='retire_model_status', value='FALIED')\n        print(\"Retirement cannot be done as the model is not deployed !!\") \n    else:\n        trained_model_id = ti.xcom_pull(task_ids = 'task_train_model', key = 'trained_model_id') \n\n        headers = {\n        'AOA-Project-ID': config_main['projectid'],\n        'Accept': 'application/json, text/plain, */*',\n        'Accept-Language': 'en-US,en;q=0.9',\n        'Authorization': 'Bearer ' + config_main['bearertoken'],\n        'Content-Type': 'application/json',\n        }\n\n        # Identifying the deployment ID\n        get_deployment_id_response = requests.get('https://airflow-u9usja4twtauvt3s.env.clearscape.teradata.com:8443/modelops/core/api/deployments/search/findByStatusAndTrainedModelId?projection=expandDeployment&status=DEPLOYED&trainedModelId=' + trained_model_id , headers=headers)\n  \n        get_deployment_id_json = get_deployment_id_response.json()\n        deployment_id = get_deployment_id_json['_embedded']['deployments'][0]['id']\n\n        json_data = {\n            \"deploymentId\": deployment_id\n        }\n\n        # Retire the specific deployment\n        retire_model_response = requests.post('https://airflow-u9usja4twtauvt3s.env.clearscape.teradata.com:8443/modelops/core/api/trainedModels/' + trained_model_id + '/retire', headers=headers, json=json_data)\n        retire_model_response_json = retire_model_response.json()\n\n                # Get the Evaluation Job ID\n        retire_job_id = retire_model_response_json.get('id')\n        ti.xcom_push(key='retire_job_id', value=retire_job_id)\n\n        job_status = get_job_status(retire_job_id)\n        print(\"Started - Job - Status: \", job_status)\n\n        while job_status != \"COMPLETED\":\n            if job_status==\"ERROR\":\n                print(\"The Retire job is terminated due to an Error\")\n                # Set the Trained Model Id to None here and check in next step (Evaluate)\n                break\n            elif job_status==\"CANCELLED\":\n                print(\"The Retire job is Cancelled !!\")\n                break\n            print(\"Job is not completed yet. Current status\", job_status)\n            time.sleep(5) # wait 5s\n            job_status = get_job_status(retire_job_id)\n\n        # Checking Job status at the end to push the correct evaluate_job_id\n        if(job_status == \"COMPLETED\"):\n            ti.xcom_push(key='retire_model_status', value='RETIRED')\n            print('Model Retired Successfully! Job ID is : ', retire_job_id, ' Status : ', job_status)\n        else:\n            ti.xcom_push(key='retire_model_status', value='FAILED')\n            print(\"Retire Job is terminated !!\")\n\n\n\nwith DAG(\n    dag_id = 'ModelOps_Accelerator_v1',\n    default_args=default_args,\n    description = 'ModelOps lifecycle accelerator for Python Diabetes Prediction model',\n    start_date=datetime.now(), # Set the start_date as per requirement\n    schedule_interval='@daily'\n) as dag:\n    task1 = PythonOperator(\n        task_id='task_train_model',\n        python_callable=train_model\n    )\n    task2 = PythonOperator(\n        task_id='task_evaluate_model',\n        python_callable=evaluate_model\n    )\n    task3 = PythonOperator(\n        task_id='task_approve_model',\n        python_callable=approve_model\n    )\n    task4 = PythonOperator(\n        task_id='task_deploy_model',\n        python_callable=deploy_model\n    )\n    task5 = PythonOperator(\n        task_id='task_retire_model',\n        python_callable=retire_model\n    )\n    \n\ntask1.set_downstream(task2)\ntask2.set_downstream(task3)\ntask3.set_downstream(task4)\ntask4.set_downstream(task5)\n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"docker-compose-\u3067-airflow-\u3092\u521d\u671f\u5316\u3059\u308b",children:"Docker Compose \u3067 Airflow \u3092\u521d\u671f\u5316\u3059\u308b"}),"\n",(0,a.jsx)(n.p,{children:"Linux \u4ee5\u5916\u306e\u30aa\u30da\u30ec\u30fc\u30c6\u30a3\u30f3\u30b0 \u30b7\u30b9\u30c6\u30e0\u3067\u306f\u3001\u5185\u90e8 Airflow \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306a\u3069\u306e Airflow \u30b5\u30fc\u30d3\u30b9\u3092\u521d\u671f\u5316\u3059\u308b\u969b\u306b\u3001AIRFLOW_UID \u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u3068\u3044\u3046\u8b66\u544a\u304c\u8868\u793a\u3055\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u3053\u306e\u8b66\u544a\u3092\u7121\u8996\u3057\u3066\u3082\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:', id="UID Airflow variable", role="content-editable emits-gtm-events"',children:'echo -e "AIRFLOW_UID=5000" > .env\n'})}),"\n",(0,a.jsx)(n.p,{children:"\u5185\u90e8\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u79fb\u884c\u3092\u5b9f\u884c\u3057\u3001\u6700\u521d\u306e\u30e6\u30fc\u30b6\u30fc \u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u521d\u671f\u5316\u3057\u307e\u3059\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:', id="", role="content-editable emits-gtm-events"',children:"docker compose up airflow-init\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u521d\u671f\u5316\u304c\u5b8c\u4e86\u3059\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:', id="Check Airflow init", role="content-editable emits-gtm-events"',children:" airflow-init_1       | Upgrades done\n airflow-init_1       | Admin user airflow created\n airflow-init_1       | 2.8.2\n start_airflow-init_1 exited with code 0\n"})}),"\n",(0,a.jsx)(n.h2,{id:"airflow\u30c7\u30e2\u74b0\u5883\u3092\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u3059\u308b",children:"Airflow\u30c7\u30e2\u74b0\u5883\u3092\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u3059\u308b"}),"\n",(0,a.jsx)(n.p,{children:"\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u3001\u4e8b\u524d\u306b\u30ed\u30fc\u30c9\u3055\u308c\u305f\u30b5\u30f3\u30d7\u30eb DAG \u3092\u524a\u9664\u3057\u3066\u74b0\u5883\u3092\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u3067\u304d\u307e\u3059\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:', id="Docker compose down", role="content-editable emits-gtm-events"',children:"docker-compose down -v\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u6b21\u306b\u3001docker-compose.yaml \u30d5\u30a1\u30a4\u30eb\u3067\u3053\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f4\u65b0\u3057\u307e\u3059\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:', id="Docker compose yaml", role="content-editable emits-gtm-events"',children:"AIRFLOW__CORE__LOAD_EXAMPLES: 'false'\n"})}),"\n",(0,a.jsx)(n.h2,{id:"\u30e2\u30c7\u30eb\u30d5\u30a1\u30af\u30c8\u30ea\u30fc\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30af\u30bb\u30e9\u30ec\u30fc\u30bf\u3067airflow\u3092\u8d77\u52d5\u3059\u308b",children:"\u30e2\u30c7\u30eb\u30d5\u30a1\u30af\u30c8\u30ea\u30fc\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a2\u30af\u30bb\u30e9\u30ec\u30fc\u30bf\u3067Airflow\u3092\u8d77\u52d5\u3059\u308b"}),"\n",(0,a.jsx)(n.p,{children:"\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u3066 Airflow \u3092\u8d77\u52d5\u3057\u307e\u3059\u3002"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:', id="Docker compose up", role="content-editable emits-gtm-events"',children:"docker-compose up -d\n"})}),"\n",(0,a.jsx)(n.h2,{id:"modelops-\u3067\u30e2\u30c7\u30eb-\u30d5\u30a1\u30af\u30c8\u30ea\u30fc-\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u306e-airflow-dag-\u3092\u5b9f\u884c\u3059\u308b",children:"ModelOps \u3067\u30e2\u30c7\u30eb \u30d5\u30a1\u30af\u30c8\u30ea\u30fc \u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u306e Airflow DAG \u3092\u5b9f\u884c\u3059\u308b"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\u3053\u308c\u3067\u3001\u6b21\u306e ",(0,a.jsx)(n.a,{href:"http://localhost:8080/",children:"http://localhost:8080/"})," \u3092\u4f7f\u7528\u3057\u3066 Airflow UI \u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Airflow\u30ed\u30b0\u30a4\u30f3",src:t(83943).A+"",width:"3719",height:"1305"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"\u30e6\u30fc\u30b6\u30fc\u540d: airflow\u3001\u30d1\u30b9\u30ef\u30fc\u30c9: airflow \u3067\u30ed\u30b0\u30a4\u30f3\u3057\u307e\u3059\u3002DAG \u30e1\u30cb\u30e5\u30fc\u3067\u3001\u4f5c\u6210\u3057\u305f DAG \u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"DAG",src:t(18690).A+"",width:"3714",height:"1233"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"\u6700\u5f8c\u306b\u4f5c\u6210\u3057\u305f DAG \u3092\u9078\u629e\u3059\u308b\u3068\u3001\u30b0\u30e9\u30d5\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"DAG",src:t(99540).A+"",width:"3673",height:"1773"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"\u3053\u308c\u3067\u3001\u53f3\u4e0a\u306e\u518d\u751f\u30a2\u30a4\u30b3\u30f3\u3092\u4f7f\u7528\u3057\u3066 DAG \u3092\u30c8\u30ea\u30ac\u30fc\u3067\u304d\u307e\u3059\u3002"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"\u4efb\u610f\u306e\u30bf\u30b9\u30af\u3092\u9078\u629e\u3057\u3001\u30ed\u30b0 \u30e1\u30cb\u30e5\u30fc\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001\u30ed\u30b0\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002"}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsx)(n.p,{children:"ClearScape Analytics ModelOps - \u30b8\u30e7\u30d6 \u30bb\u30af\u30b7\u30e7\u30f3\u3067\u3001\u30b8\u30e7\u30d6\u306e\u5b9f\u884c\u304c\u958b\u59cb\u3055\u308c\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"DAG",src:t(11411).A+"",width:"3753",height:"814"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"\u3053\u308c\u3067\u3001\u3059\u3079\u3066\u306e\u30bf\u30b9\u30af\u304c\u6b63\u5e38\u306b\u5b9f\u884c\u3055\u308c\u305f\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"DAG",src:t(70228).A+"",width:"3690",height:"1524"})}),"\n",(0,a.jsx)(n.h2,{id:"\u307e\u3068\u3081",children:"\u307e\u3068\u3081"}),"\n",(0,a.jsx)(n.p,{children:"\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306e\u76ee\u7684\u306f\u3001Linux \u30b5\u30fc\u30d0\u30fc\u306b Airflow \u74b0\u5883\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u65b9\u6cd5\u3068\u3001Airflow \u3092\u4f7f\u7528\u3057\u3066 ClearScape Analytics ModelOps \u304a\u3088\u3073 Teradata Vantage \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u3084\u308a\u53d6\u308a\u3059\u308b\u65b9\u6cd5\u3092\u5b9f\u969b\u306b\u4f53\u9a13\u3059\u308b\u3053\u3068\u3067\u3059\u3002\u307e\u305f\u3001Airflow \u3068\u30c7\u30fc\u30bf \u30e2\u30c7\u30ea\u30f3\u30b0\u304a\u3088\u3073\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9 \u30c4\u30fc\u30eb dbt \u3092\u7d71\u5408\u3057\u3066 Teradata Vantage \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4f5c\u6210\u3057\u3066\u30ed\u30fc\u30c9\u3059\u308b\u65b9\u6cd5\u306e\u4f8b\u3082\u793a\u3057\u307e\u3059\u3002"}),"\n",(0,a.jsx)(n.h2,{id:"\u3055\u3089\u306b\u8a73\u3057\u304f",children:"\u3055\u3089\u306b\u8a73\u3057\u304f"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://docs.teradata.com/search/documents?query=ModelOps&sort=last_update&virtual-field=title_only&content-lang=",children:"ModelOps documentatioN"}),"."]}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},99540:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/DAG_graph-e3b7d1d67a022083c12c13f651d1f2e4.png"},18690:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/DAGs-8609113cb8220ce56d2be90926c1deb7.png"},83943:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/LoginPage-7f3ec330b28502b922f900514e05656e.png"},2794:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/Workflow-232b85aea20f2c1e830cc0454f4dffdd.png"},11411:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/modelOps1-1ec7e72182e2db60e439657b40548894.png"},70228:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/successTasks-eded69426eea01ba95119686320f84e9.png"},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>r});var a=t(96540);const o={},s=a.createContext(o);function i(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);